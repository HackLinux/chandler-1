Documentation
-------------

The latest, up to date documentation on how to build Chandler:

  http://wiki.osafoundation.org/bin/view/Chandler/BuildingChandler

Environments
------------

 - Linux, gcc 3.3.x with gcj 3.4.x

 - OS X, 10.3.x, dev tools gcc

 - Win2k/XP, MSVC 7.1, the Cygwin environment with binutils, byacc, curl, 
   cygwin, gzip, make, patchutils, tar and unzip. You will also need perl.

Be ready to provide lots of disk space, especially on Windows (~ 1 gb).

Getting build sources with CVS
------------------------------

   - cvs -d :pserver:<cvslogin>@cvs.osafoundation.org:/usr/local/cvsrep co external

Username anonymous, login anonymous works.

Setting vital environment variables:
------------------------------------
  - cd external
  - export BUILD_ROOT=`pwd`

On Linux also:
  - export GCJ_HOME='path to gcj installation'

For example, if the path to gcj is /usr/local/gcc-3.3.2/bin/gcj, the
GCJ_HOME variable should be set to /usr/local/gcc-3.3.2

On Windows, the usual MSVC environment variables need to be set. See VC's
vsvars32.bat file for more information.

Getting compilers on Windows and Mac OS X
-----------------------------------------

  - make compilers

On other platforms this will return a message informing you to install 
gcj 3.4.x yourself.

Building all
--------------------------------

  - make world                     (for release binaries)
  - make DEBUG=1 world             (for debug binaries)

cd ../chandler to run the resulting program.

Top Makefile targets
--------------------
Use DEBUG=1 for debug versions.
Most subsystems depend on at least one other. Be sure to preserve the order
in which they're built (listed in the SYSTEMS Makefile variable).

 - world: builds all of external and internal; Chandler ready to run
 - default, all: build all subsystems
 - env: check build environment
 - compilers: download and install compilers for your platform
 - binaries: create release or debug binaries for upload
 - install: installs binaries into chandler directory
 - expand: download sources and expand them into the source tree
 - clean: clean all subsystems
 - realclean: clean up more junk, will force you to do make expand next time

Common Makefile targets in subsystem Makefiles
----------------------------------------------
Use DEBUG=1 for debug versions

 - default, all: build the subsystem
 - clean: clean the subsystem
 - snap: make a binary archive called release.tar.gz or debug.tar.gz of
         this subsystem only. This archive can be installed on top of a
         Chandler install for testing/debugging.
 - apply: apply the patches. Not all subsystems have patches. This target
          is invoked during the build process.
 - expand: unpack the source packages

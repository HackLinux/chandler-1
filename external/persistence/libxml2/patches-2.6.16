diff -r -upN libxml2-2.6.16/Makefile.in libxml2-2.6.16-patched/Makefile.in
--- libxml2-2.6.16/Makefile.in	Wed Nov 10 09:36:58 2004
+++ libxml2-2.6.16-patched/Makefile.in	Tue Jan  4 00:01:10 2005
@@ -1349,15 +1349,15 @@ uninstall-man: uninstall-man1 uninstall-
 	uninstall-man1 uninstall-man3 uninstall-pkgconfigDATA
 
 
-testapi.c: gentest.py doc/libxml2-api.xml
-	-@(if [ "$(PYTHON)" != "" ] ; then $(PYTHON) gentest.py ; fi )
+#testapi.c: gentest.py doc/libxml2-api.xml
+#	-@(if [ "$(PYTHON)" != "" ] ; then $(PYTHON) gentest.py ; fi )
 
 #testOOM_SOURCES=testOOM.c testOOMlib.h testOOMlib.c
 #testOOM_LDFLAGS = 
 #testOOM_DEPENDENCIES = $(DEPS)
 #testOOM_LDADD= $(LDADDS)
 
-check-local: all tests
+check-local: 
 
 testall : tests SVGtests SAXtests
 
diff -r -upN libxml2-2.6.16/configure.in libxml2-2.6.16-patched/configure.in
--- libxml2-2.6.16/configure.in	Wed Nov 10 09:32:39 2004
+++ libxml2-2.6.16-patched/configure.in	Tue Jan  4 00:01:10 2005
@@ -372,6 +372,10 @@ if test "$with_python" != "no" ; then
     then
         echo Found python in $with_python/bin/python
         PYTHON="$with_python/bin/python"
+    elif test -x "$with_python/bin/python_d"
+    then
+        echo Found python in $with_python/bin/python_d
+        PYTHON="$with_python/bin/python_d"
     else
 	if test -x "$with_python"
 	then
diff -r -upN libxml2-2.6.16/encoding.c libxml2-2.6.16-patched/encoding.c
--- libxml2-2.6.16/encoding.c	Sat Nov  6 07:19:31 2004
+++ libxml2-2.6.16-patched/encoding.c	Mon Jan 10 19:14:23 2005
@@ -2335,7 +2335,7 @@ ISO8859xToUTF8(unsigned char* out, int *
     unsigned int c;
 
     if ((out == NULL) || (outlen == NULL) || (inlen == NULL) ||
-        (in == NULL) || (xlattable == NULL))
+        (in == NULL) || (unicodetable == NULL))
 	return(-1);
     outend = out + *outlen;
     inend = in + *inlen;
diff -r -upN libxml2-2.6.16/parser.c libxml2-2.6.16-patched/parser.c
--- libxml2-2.6.16/parser.c	Tue Nov  9 10:48:18 2004
+++ libxml2-2.6.16-patched/parser.c	Tue Jan  4 21:03:14 2005
@@ -11564,6 +11564,7 @@ xmlSAXParseFileWithData(xmlSAXHandlerPtr
     xmlDetectSAX2(ctxt);
     if (data!=NULL) {
 	ctxt->_private = data;
+	ctxt->userData = data;
     }
 
     if ((ctxt->directory == NULL) && (directory == NULL))
@@ -11841,6 +11842,7 @@ xmlSAXParseMemoryWithData(xmlSAXHandlerP
     xmlDetectSAX2(ctxt);
     if (data!=NULL) {
 	ctxt->_private=data;
+	ctxt->userData=data;
     }
 
     ctxt->recovery = recovery;
diff -r -upN libxml2-2.6.16/python/Makefile.in libxml2-2.6.16-patched/python/Makefile.in
--- libxml2-2.6.16/python/Makefile.in	Wed Nov 10 09:37:00 2004
+++ libxml2-2.6.16-patched/python/Makefile.in	Tue Jan  4 00:25:14 2005
@@ -286,9 +286,10 @@ target_alias = @target_alias@
 
 # Makefile for libxml2 python library
 AUTOMAKE_OPTIONS = 1.4 foreign
-SUBDIRS = . tests
+SUBDIRS = .
 INCLUDES = \
 	-I$(PYTHON_INCLUDES) \
+	-I../include \
 	-I$(top_srcdir)/include	\
 	-I$(top_builddir)/include
 
@@ -699,9 +700,9 @@ uninstall-info: uninstall-info-recursive
 @WITH_PYTHON_TRUE@	$(mkinstalldirs) $(DESTDIR)$(pythondir)
 @WITH_PYTHON_TRUE@	@INSTALL@ -m 0644 libxml2.py $(DESTDIR)$(pythondir)
 @WITH_PYTHON_TRUE@	@INSTALL@ -m 0644 $(srcdir)/drv_libxml2.py $(DESTDIR)$(pythondir)
-@WITH_PYTHON_TRUE@	$(mkinstalldirs) $(DESTDIR)$(DOCS_DIR)
-@WITH_PYTHON_TRUE@	@(for doc in $(DOCS) ; \
-@WITH_PYTHON_TRUE@	   do @INSTALL@ -m 0644 $$doc $(DESTDIR)$(DOCS_DIR) ; done)
+@WITH_PYTHON_TRUE@#	$(mkinstalldirs) $(DESTDIR)$(DOCS_DIR)
+@WITH_PYTHON_TRUE@#	@(for doc in $(DOCS) ; \
+@WITH_PYTHON_TRUE@#	   do @INSTALL@ -m 0644 $$doc $(DESTDIR)$(DOCS_DIR) ; done)
 
 @WITH_PYTHON_TRUE@$(GENERATED): gen_prog
 
diff -r -upN libxml2-2.6.16/python/drv_libxml2.py libxml2-2.6.16-patched/python/drv_libxml2.py
--- libxml2-2.6.16/python/drv_libxml2.py	Wed Sep 29 04:54:35 2004
+++ libxml2-2.6.16-patched/python/drv_libxml2.py	Tue Jan  4 00:27:53 2005
@@ -91,6 +91,16 @@ class Locator(xmlreader.Locator):
         "Return the system identifier for the current event."
         return self.__locator.BaseURI()
 
+class PseudoLocator(object):
+    def __init__(self, reader):
+        self.__reader = reader
+        
+    def getLineNumber(self):
+        return self.__reader.CurrentNode().lineNo()
+        
+    def getSystemId(self):
+        return self.__reader.BaseUri()
+        
 class LibXml2Reader(xmlreader.XMLReader):
 
     def __init__(self):
@@ -149,6 +159,8 @@ class LibXml2Reader(xmlreader.XMLReader)
                 reader.SetParserProp(libxml2.PARSER_VALIDATE,self.__validate)
             else:
                 reader.SetParserProp(libxml2.PARSER_LOADDTD, 0)
+            # configure our fake locator
+            self._cont_handler.setDocumentLocator(PseudoLocator(reader))
             # we reuse attribute maps (for a slight performance gain)
             if self.__ns:
                 attributesNSImpl = xmlreader.AttributesNSImpl({},{})
diff -r -upN libxml2-2.6.16/python/setup.py libxml2-2.6.16-patched/python/setup.py
--- libxml2-2.6.16/python/setup.py	Wed Nov 10 09:37:19 2004
+++ libxml2-2.6.16-patched/python/setup.py	Tue Jan  4 00:30:43 2005
@@ -5,10 +5,15 @@
 import sys, os
 from distutils.core import setup, Extension
 
+debug = "--debug" in sys.argv or "-g" in sys.argv
+
 # Below ROOT, we expect to find include, include/libxml2, lib and bin.
 # On *nix, it is not needed (but should not harm), 
 # on Windows, it is set by configure.js.
-ROOT = r'/usr' 
+if debug:
+    ROOT = os.path.join(os.environ['BUILD_ROOT'], 'debug')
+else:
+    ROOT = os.path.join(os.environ['BUILD_ROOT'], 'release')
 
 # Thread-enabled libxml2
 with_threads = 1
@@ -56,11 +61,11 @@ else:
 # - iconv.h 
 # - libxslt/xsltconfig.h
 includes_dir = [
+os.path.join(ROOT, 'include'),
+HOME,
 "/usr/include",
 "/usr/local/include",
 "/opt/include",
-os.path.join(ROOT,'include'),
-HOME
 ];
 
 xml_includes=""
diff -r -upN libxml2-2.6.16/win32/Makefile.msvc libxml2-2.6.16-patched/win32/Makefile.msvc
--- libxml2-2.6.16/win32/Makefile.msvc	Wed Aug 25 15:20:57 2004
+++ libxml2-2.6.16-patched/win32/Makefile.msvc	Tue Jan  4 00:33:29 2005
@@ -15,7 +15,9 @@
 # There should never be a need to modify anything below this line.
 # ----------------------------------------------------------------
 
-AUTOCONF = .\config.msvc
+BUILD_VERSION=.
+
+AUTOCONF = $(BUILD_VERSION)\config.msvc
 !include $(AUTOCONF)
 
 # Names of various input and output components.
@@ -27,10 +29,10 @@ XML_DEF = $(XML_BASENAME).def
 XML_A = $(XML_BASENAME)_a.lib
 
 # Place where we let the compiler put its output.
-BINDIR = bin.msvc
-XML_INTDIR = int.msvc
-XML_INTDIR_A = int.a.msvc
-UTILS_INTDIR = int.utils.msvc
+BINDIR = $(BUILD_VERSION)\bin.msvc
+XML_INTDIR = $(BUILD_VERSION)\int.msvc
+XML_INTDIR_A = $(BUILD_VERSION)\int.a.msvc
+UTILS_INTDIR = $(BUILD_VERSION)\int.utils.msvc
 
 # The preprocessor and its options.
 CPP = cl.exe /EP
@@ -39,6 +41,10 @@ CPPFLAGS = /nologo /I$(XML_SRCDIR)\inclu
 CPPFLAGS = $(CPPFLAGS) /D "_REENTRANT"
 !endif
 
+!if "$(DEBUG)" == "1"
+CRUNTIME = $(CRUNTIME)d
+!endif
+
 # The compiler and its options.
 CC = cl.exe
 CFLAGS = /nologo /D "WIN32" /D "_WINDOWS" /D "_MBCS" /W1 $(CRUNTIME)
@@ -224,7 +230,7 @@ install : all
 	copy $(BINDIR)\$(XML_A) $(LIBPREFIX)
 	copy $(BINDIR)\$(XML_IMP) $(LIBPREFIX)
 	copy $(BINDIR)\*.exe $(BINPREFIX)
-	-copy $(BINDIR)\*.pdb $(BINPREFIX)
+	if exist $(BINDIR)\*.pdb copy $(BINDIR)\*.pdb $(BINPREFIX)
 
 install-bindist : all
 	if not exist $(INCPREFIX)\libxml mkdir $(INCPREFIX)\libxml
diff -r -upN libxml2-2.6.16/win32/configure.js libxml2-2.6.16-patched/win32/configure.js
--- libxml2-2.6.16/win32/configure.js	Wed Aug 25 15:20:57 2004
+++ libxml2-2.6.16-patched/win32/configure.js	Tue Jan  4 00:35:40 2005
@@ -162,7 +162,7 @@ function usage()
 /* Discovers the version we are working with by reading the apropriate
    configuration file. Despite its name, this also writes the configuration
    file included by our makefile. */
-function discoverVersion()
+function discoverVersion(build_version)
 {
 	var fso, cf, vf, ln, s, iDot, iSlash;
 	fso = new ActiveXObject("Scripting.FileSystemObject");
@@ -183,11 +183,11 @@ function discoverVersion()
 	}
 	cf = fso.OpenTextFile(configFile, 1);
 	if (compiler == "msvc")
-		versionFile = ".\\config.msvc";
+		versionFile = build_version + ".\\config.msvc";
 	else if (compiler == "mingw")
-		versionFile = ".\\config.mingw";
+		versionFile = build_version + ".\\config.mingw";
 	else if (compiler == "bcb")
-		versionFile = ".\\config.bcb";
+		versionFile = build_version + ".\\config.bcb";
 	vf = fso.CreateTextFile(versionFile, true);
 	vf.WriteLine("# " + versionFile);
 	vf.WriteLine("# This file is generated automatically by " + WScript.ScriptName + ".");
@@ -540,7 +540,7 @@ if (buildSoPrefix == "")
 	buildSoPrefix = "$(PREFIX)" + dirSep + "lib";
 
 // Discover the version.
-discoverVersion();
+discoverVersion(buildDebug ? "debug" : "release");
 if (error != 0) {
 	WScript.Echo("Version discovery failed, aborting.");
 	WScript.Quit(error);

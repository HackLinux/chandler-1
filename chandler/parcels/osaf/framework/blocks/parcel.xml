<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003-2005 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<Parcel itsName="blocks"
        xmlns="http://osafoundation.org/parcels/core"
        xmlns:docSchema="http://osafoundation.org/parcels/osaf/framework/blocks"
        xmlns:contentModel="http://osafoundation.org/parcels/osaf/contentmodel">

  <description>Schema for blocks that make up CPIA documents </description>
  <version>0.3</version>
  
  <!--
    global attributes for CPIA documents
  -->
  <Enumeration itsName="fontFamilyEnumType">
    <values>DefaultUIFont</values>
    <values>SerifFont</values>
    <values>SansSerifFont</values>
    <values>FixedPitchFont</values>
  </Enumeration>
   
  <Attribute itsName="fontFamily">
    <type itemref="docSchema:fontFamilyEnumType"/>
    <initialValue type="docSchema:fontFamilyEnumType">DefaultUIFont</initialValue>
  </Attribute>

  <Attribute itsName="fontSize">
    <type itemref="Float"/>
    <initialValue type="Float">12.0</initialValue>
  </Attribute>

  <!--
    Currently, fontStyle is a string containing any of the following words:
    bold light italic underline, but others will be included in the future
  -->
  <Attribute itsName="fontStyle">
    <type itemref="String"/> 
    <initialValue type="String"></initialValue>
  </Attribute>

  <Attribute itsName="fontName">
    <type itemref="String"/>
    <initialValue type="String"></initialValue>
  </Attribute>

  <Struct itsName="ColorType" itemClass="osaf.framework.blocks.DocumentTypes.ColorStruct">
    <fields key="red"></fields>
    <fields key="green"></fields>
    <fields key="blue"></fields>
    <fields key="alpha"></fields>
    <implementationTypes key="python">osaf.framework.blocks.DocumentTypes.ColorType</implementationTypes>
  </Struct>
 
  <Struct itsName="SizeType" itemClass="osaf.framework.blocks.DocumentTypes.SizeStruct">
    <fields key="width"></fields>
    <fields key="height"></fields>
    <implementationTypes key="python">osaf.framework.blocks.DocumentTypes.SizeType</implementationTypes>
  </Struct>
 
  <Struct itsName="PositionType" itemClass="osaf.framework.blocks.DocumentTypes.PositionStruct">
    <fields key="x"></fields>
    <fields key="y"></fields>
    <implementationTypes key="python">osaf.framework.blocks.DocumentTypes.PositionType</implementationTypes>
  </Struct>

  <Struct itsName="RectType" itemClass="osaf.framework.blocks.DocumentTypes.RectStruct">
    <fields key="top"></fields>
    <fields key="left"></fields>
    <fields key="bottom"></fields>
    <fields key="right"></fields>
    <implementationTypes key="python">osaf.framework.blocks.DocumentTypes.RectType</implementationTypes>
  </Struct>
 
  <Enumeration itsName="textAlignmentEnumType">
    <values>Left</values>
    <values>Center</values>
    <values>Right</values>
  </Enumeration>
    
  <Attribute itsName="textAlignmentEnum">
    <type itemref="docSchema:textAlignmentEnumType"/>
    <initialValue type="docSchema:textAlignmentEnumType">Left</initialValue>
  </Attribute>
  
  <Enumeration itsName="orientationEnumType">
    <values>Horizontal</values>
    <values>Vertical</values>
  </Enumeration>

  <Attribute itsName="orientationEnum">
    <type itemref="docSchema:orientationEnumType"/>
    <initialValue type="docSchema:orientationEnumType">Horizontal</initialValue>
  </Attribute>

  <Attribute itsName="columnHeadings">
    <type itemref="String"/>
    <cardinality>list</cardinality>
    <required>True</required>
  </Attribute>

  <Attribute itsName="columnHeadingTypes">
    <type itemref="String"/>
    <cardinality>list</cardinality>
  </Attribute>
  
  <Attribute itsName="columnData">
    <type itemref="String"/>
    <cardinality>list</cardinality>
  </Attribute>
  
  <Attribute itsName="columnWidths">
    <type itemref="Integer"/>
    <cardinality>list</cardinality>
    <required>True</required>
  </Attribute>

  <Attribute itsName="elementDelegate">
    <type itemref="String"/>
    <initialValue type="String"></initialValue>
  </Attribute>

  <Attribute itsName="event">
    <type itemref="docSchema:BlockEvent"/>
  </Attribute>
    
  <Attribute itsName="selection">
    <type itemref="Item"/>
    <initialValue itemref="None"/>
  </Attribute>

  <!--
    Named styles
  -->
  <Kind itsName="Style">
    <classes key="python">osaf.framework.blocks.Styles.Style</classes>
    <superKinds itemref="Item"/>
  </Kind>

  <Kind itsName="CharacterStyle">
    <classes key="python">osaf.framework.blocks.Styles.CharacterStyle</classes>
    <superKinds itemref="docSchema:Style"/>

    <attributes itemref="docSchema:fontFamily"/>
    <attributes itemref="docSchema:fontSize"/>
    <attributes itemref="docSchema:fontStyle"/>
    <attributes itemref="docSchema:fontName"/>
  </Kind>
  
  <Attribute itsName="characterStyle">
    <type itemref="docSchema:CharacterStyle"/>
  </Attribute>

  <!-- 
    Color style 
  -->
  
  <Kind itsName="ColorStyle">
    <classes key="python">osaf.framework.blocks.Styles.ColorStyle</classes>
    <superKinds itemref="docSchema:Style"/>

    <attributes itemref="docSchema:foregroundColor"/>
    <attributes itemref="docSchema:backgroundColor"/>
  </Kind>

  <Attribute itsName="foregroundColor">
    <type itemref="docSchema:ColorType"/>
    <initialValue type="docSchema:ColorType">0,0,0,255</initialValue>
  </Attribute>

  <Attribute itsName="backgroundColor">
    <type itemref="docSchema:ColorType"/>
    <initialValue type="docSchema:ColorType">255,255,255,255</initialValue>
  </Attribute>
  
  <Attribute itsName="colorStyle">
    <type itemref="docSchema:ColorStyle"/>
  </Attribute>

  <Attribute itsName="blockName">
    <type itemref="String"/>
  </Attribute>
    
  <!--
    Block Events
  -->

  <Kind itsName="BlockEvent">
    <classes key="python">osaf.framework.blocks.Block.BlockEvent</classes>
    <superKinds itemref="Item"/>

    <Enumeration itsName="dispatchEnumType">
      <values>BroadcastInsideMyEventBoundary</values>
      <values>BroadcastInsideActiveViewEventBoundary</values>
      <values>BroadcastEverywhere</values>
      <values>FocusBubbleUp</values>
      <values>ActiveViewBubbleUp</values>
      <values>SendToBlockByReference</values>
      <values>SendToBlockByName</values>
    </Enumeration>

    <Attribute itsName="dispatchEnum">
      <type itemref="docSchema:BlockEvent/dispatchEnumType"/>
      <initialValue type="docSchema:BlockEvent/dispatchEnumType">SendToBlockByReference</initialValue>
    </Attribute>

    <Attribute itsName="commitAfterDispatch">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Attribute itsName="destinationBlockReference">
      <type itemref="docSchema:Block"/>
    </Attribute>

    <Attribute itsName="dispatchToBlockName">
      <type itemref="String"/>
    </Attribute>

    <Attribute itsName="methodName">
      <type itemref="String"/>
    </Attribute>

    <attributes itemref="docSchema:blockName"/>    

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="destinationBlockReference">
            <attribute value="destinationBlockReference"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:BlockEvent/DefaultCloud/destinationBlockReference"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:BlockEvent/DefaultCloud"/>
  </Kind>

  <Kind itsName="ChoiceEvent">
    <classes key="python">osaf.framework.blocks.Block.BlockEvent</classes>
    <superKinds itemref="docSchema:BlockEvent"/>

    <Attribute itsName="choice">
      <type itemref="String"/>
      <required>True</required>
    </Attribute>
  </Kind>
  
  <Kind itsName="KindParameterizedEvent">
    <classes key="python">osaf.framework.blocks.Block.BlockEvent</classes>
    <superKinds itemref="docSchema:BlockEvent"/>

    <Attribute itsName="kindParameter">
      <type itemref="Kind"/>
      <required>True</required>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="kindParameter">
            <attribute value="kindParameter"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:KindParameterizedEvent/DefaultCloud/kindParameter"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:KindParameterizedEvent/DefaultCloud"/>
  </Kind>

  <Kind itsName="ModifyContentsEvent">
    <classes key="python">osaf.framework.blocks.Block.BlockEvent</classes>
    <superKinds itemref="docSchema:BlockEvent"/>

    <Attribute itsName="items">
      <type itemref="Item"/>
      <cardinality>list</cardinality>
      <initialValue />
    </Attribute>

    <Enumeration itsName="operationType">
      <values>add</values>
      <values>remove</values>
      <values>toggle</values>
    </Enumeration>

    <Attribute itsName="operation">
      <type itemref="docSchema:ModifyContentsEvent/operationType"/>
      <initialValue type="docSchema:ModifyContentsEvent/operationType">add</initialValue>
    </Attribute>

    <Attribute itsName="copyItems">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>

    <Attribute itsName="selectFirstItem">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Attribute itsName="disambiguateItemNames">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="items">
            <attribute value="items"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:ModifyContentsEvent/DefaultCloud/items"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:ModifyContentsEvent/DefaultCloud"/>
  </Kind>

  <Attribute itsName="eventsForNamedDispatch">
    <type itemref="docSchema:BlockEvent"/>
    <cardinality>list</cardinality>
  </Attribute>

  <Kind itsName="EventList">
    <superKinds itemref="Item"/>
    <attributes itemref="docSchema:eventsForNamedDispatch"/>
  </Kind>

  <!--
    Block
  -->

  <Kind itsName="Block">
    <classes key="python">osaf.framework.blocks.Block.Block</classes>
    <superKinds itemref="Item"/>

    <Attribute itsName="contents">
      <type itemref="contentModel:ContentItem"/>
      <inverseAttribute itemref="contentModel:ContentItem/contentsOwner"/>
    </Attribute>

    <Attribute itsName="viewAttribute">
      <type itemref="String"/>
    </Attribute>

    <Attribute itsName="parentBlock">
      <type itemref="docSchema:Block"/>
      <inverseAttribute itemref="docSchema:Block/childrenBlocks"/>
      <initialValue itemref="None"/>
    </Attribute>
  
    <Attribute itsName="childrenBlocks">
      <type itemref="docSchema:Block"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:Block/parentBlock"/>
      <initialValue />
    </Attribute>

    <Attribute itsName="isShown">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>

    <Attribute itsName="eventBoundary">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Attribute itsName="contextMenu">
      <type itemref="docSchema:ContextMenu"/>
    </Attribute>

    <Attribute itsName="detailItemOwner">
      <type itemref="docSchema:Block/"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:TrunkParentBlock/detailItem"/>
    </Attribute>

    <Attribute itsName="viewContainer">
        <type itemref="docSchema:Block"/>
        <cardinality>list</cardinality>
        <inverseAttribute itemref="docSchema:ViewContainer/views"/>
    </Attribute>

    <attributes itemref="docSchema:blockName"/>
    <attributes itemref="docSchema:eventsForNamedDispatch"/>
    <attributes itemref="contentModel:ContentItem/itemCollectionInclusions"/>
    <attributes itemref="contentModel:ContentItem/itemCollectionExclusions"/>
    <attributes itemref="contentModel:ContentItem/itemCollectionResults"/>

    <Attribute itsName="parentTrunkSubtrees"><!-- reference to parent tree of blocks -->
      <type itemref="docSchema:TrunkSubtree"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:TrunkSubtree/rootBlocks"/>
    </Attribute>  

    <Attribute itsName="position"><!-- for tree-of-blocks sorting -->
      <type itemref="Float"/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="contents">
            <!-- This attribute's type is contentModel:ItemCollection -->
            <attribute value="contents"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Block/DefaultCloud/contents"/>
        <Endpoint itsName="childrenBlocks">
            <attribute value="childrenBlocks"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Block/DefaultCloud/childrenBlocks"/>
        <Endpoint itsName="eventsForNamedDispatch">
            <attribute value="eventsForNamedDispatch"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Block/DefaultCloud/eventsForNamedDispatch"/>
    </Cloud>
    <!-- Link this cloud with the Block kind -->
    <clouds alias="default" itemref="docSchema:Block/DefaultCloud"/>

  </Kind>
  
  <!--
    View
  -->
  <Kind itsName="View">
    <classes key="python">osaf.framework.blocks.Views.View</classes>
    <superKinds itemref="docSchema:BoxContainer"/>
  </Kind>

  <!--
    RectangularChild is a rectangular child of a container
  -->
  <Kind itsName="RectangularChild">
    <classes key="python">osaf.framework.blocks.Block.RectangularChild</classes>
    <superKinds itemref="docSchema:Block"/>

    <Attribute itsName="size">
      <type itemref="docSchema:SizeType"/>
      <initialValue type="docSchema:SizeType">0,0</initialValue>
    </Attribute>

    <Attribute itsName="minimumSize">
      <type itemref="docSchema:SizeType"/>
      <initialValue type="docSchema:SizeType">-1,-1</initialValue>
    </Attribute>

    <Attribute itsName="border">
      <type itemref="docSchema:RectType"/>
      <initialValue type="docSchema:RectType">0.0, 0.0, 0.0, 0.0</initialValue>
    </Attribute>
    
    <Enumeration itsName="alignmentEnumType">
      <values>grow</values>
      <values>growConstrainAspectRatio</values>
      <values>alignCenter</values>
      <values>alignTopCenter</values>
      <values>alignMiddleLeft</values>
      <values>alignBottomCenter</values>
      <values>alignMiddleRight</values>
      <values>alignTopLeft</values>
      <values>alignTopRight</values>
      <values>alignBottomLeft</values>
      <values>alignBottomRight</values>
    </Enumeration>

    <Attribute itsName="alignmentEnum">
      <type itemref="docSchema:RectangularChild/alignmentEnumType"/>
      <initialValue type="docSchema:RectangularChild/alignmentEnumType">grow</initialValue>
    </Attribute>

    <Attribute itsName="stretchFactor">
      <type itemref="Float"/>
      <initialValue type="Float">1.0</initialValue>
    </Attribute>
  </Kind>

  <!--
    BoxContainer
  -->
  <Kind itsName="BoxContainer">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.BoxContainer</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <attributes itemref="docSchema:orientationEnum"/>
  </Kind>
  
  <!--
    ScrolledContainer
  -->
  <Kind itsName="ScrolledContainer">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.ScrolledContainer</classes>
    <superKinds itemref="docSchema:BoxContainer"/>
  </Kind>  
  
  <!--
    Dynamic Containers are built dynamically when the Active View changes.
    They include Menus, and Toolbars.
    Used as a mixin class for other blocks.
  -->
  <Kind itsName="DynamicContainer">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.DynamicContainer</classes>

    <Attribute itsName="dynamicChildren">
      <type itemref="docSchema:Block"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:DynamicChild/dynamicParent"/>
    </Attribute>
    
    <Attribute itsName="collectionSpecifier">
      <redirectTo>dynamicChildren</redirectTo>
    </Attribute>
    
    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="dynamicChildren">
            <attribute value="dynamicChildren"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:DynamicContainer/DefaultCloud/dynamicChildren"/>
    </Cloud>
    <!-- Link this cloud with the Block kind -->
    <clouds alias="default" itemref="docSchema:DynamicContainer/DefaultCloud"/>

  </Kind>
  
  <!--
    Dynamic Children are built dynamically when the Active View changes.
    They include MenuItems, Menus, and ToolbarItems.
    Used as a mixin class for other blocks.
  -->
  <Kind itsName="DynamicChild">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.DynamicChild</classes>

    <Attribute itsName="dynamicParent">
      <type itemref="docSchema:Block"/>
      <inverseAttribute itemref="docSchema:DynamicContainer/dynamicChildren"/>
      <initialValue itemref="None"/>
    </Attribute>
    
    <Attribute itsName="title">
      <type itemref="String"/>
      <initialValue type="String"></initialValue>
    </Attribute>
    
    <Enumeration itsName="operationEnumType">
      <values>InsertBefore</values>
      <values>Replace</values>
      <values>Delete</values>
    </Enumeration>
    
    <Attribute itsName="operation">
      <type itemref="docSchema:DynamicChild/operationEnumType"/>
      <initialValue type="docSchema:DynamicChild/operationEnumType">InsertBefore</initialValue>
    </Attribute>
    
    <Attribute itsName="location">
      <type itemref="String"/>
    </Attribute>
    
    <Attribute itsName="itemLocation">
      <type itemref="String"/>
      <initialValue type="String"/>
    </Attribute>
    
    <Attribute itsName="helpString">
      <type itemref="String"/>
      <initialValue type="String"></initialValue>
    </Attribute>
  </Kind>

  <!--
    MenuItem
  -->
  <Kind itsName="MenuItem">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.MenuItem</classes>
    <superKinds itemref="docSchema:Block"/>
    <superKinds itemref="docSchema:DynamicChild"/>

    <Enumeration itsName="menuItemKindEnumType">
      <values>Normal</values>
      <values>Separator</values>
      <values>Check</values>
      <values>Radio</values>
    </Enumeration>
    
    <Attribute itsName="menuItemKind">
      <type itemref="docSchema:MenuItem/menuItemKindEnumType"/>
      <initialValue type="docSchema:MenuItem/menuItemKindEnumType">Normal</initialValue>
    </Attribute>
    
    <Attribute itsName="accel">
      <type itemref="String"/>
      <initialValue type="String"></initialValue>
    </Attribute>
    
    <attributes itemref="docSchema:event"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:MenuItem/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:MenuItem/DefaultCloud"/>
  </Kind>

  <!--
    Menu
  -->
  <Kind itsName="Menu">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.Menu</classes>
    <superKinds itemref="docSchema:Block"/>
    <superKinds itemref="docSchema:DynamicContainer"/>
    <superKinds itemref="docSchema:DynamicChild"/>
  </Kind>
  
  <!--
    MenuBar
  -->
  <Kind itsName="MenuBar">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.MenuBar</classes>
    <superKinds itemref="docSchema:Block"/>
    <superKinds itemref="docSchema:DynamicContainer"/>
  </Kind>
  
  <!--
    Button
  -->
  <Kind itsName="Button">
    <classes key="python">osaf.framework.blocks.ControlBlocks.Button</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    
    <Attribute itsName="title">
      <type itemref="String"/>
    </Attribute>
    
    <Enumeration itsName="buttonKindEnumType">
      <values>Text</values>
      <values>Image</values>
      <values>Toggle</values>
    </Enumeration>
    
    <Attribute itsName="buttonKind">
      <type itemref="docSchema:Button/buttonKindEnumType"/>
    </Attribute>
    
    <Attribute itsName="icon">
      <type itemref="String"/>
    </Attribute>

    <Attribute itsName="rightClicked">
      <type itemref="docSchema:BlockEvent"/>
    </Attribute>

    <attributes itemref="docSchema:characterStyle"/>    
    <attributes itemref="docSchema:event"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="characterStyle">
            <attribute value="characterStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:Button/DefaultCloud/characterStyle"/>
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Button/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Button/DefaultCloud"/>
  </Kind>
  
  <!--
    Choice
  -->
  <Kind itsName="Choice">
    <classes key="python">osaf.framework.blocks.ControlBlocks.Choice</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    <attributes itemref="docSchema:event"/>
    
    <Attribute itsName="choices">
      <type itemref="String"/>
      <cardinality>list</cardinality>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Choice/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Choice/DefaultCloud"/>
  </Kind>

 <!--
    CheckBox
  -->
  <Kind itsName="CheckBox">
    <classes key="python">osaf.framework.blocks.ControlBlocks.CheckBox</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    <attributes itemref="docSchema:event"/>
    
    <Attribute itsName="title">
      <type itemref="String"/>
    </Attribute>     

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:CheckBox/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:CheckBox/DefaultCloud"/>
  </Kind>
  
  <!--
    LayoutChooser
  -->
  <Kind itsName="LayoutChooser">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.LayoutChooser</classes>
    <superKinds itemref="docSchema:BoxContainer"/>
    
    <Attribute itsName="choices">
      <type itemref="docSchema:Block"/>
      <cardinality>list</cardinality>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="choices">
            <attribute value="choices"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:LayoutChooser/DefaultCloud/choices"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:LayoutChooser/DefaultCloud"/>
  </Kind>

  <!--
    ComboBox
  -->
  <Kind itsName="ComboBox">
    <classes key="python">osaf.framework.blocks.ControlBlocks.ComboBox</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    
    <Attribute itsName="selection">
      <type itemref="String"/>
    </Attribute>
    
    <Attribute itsName="choices">
      <type itemref="String"/>
      <cardinality>list</cardinality>
    </Attribute>

    <Attribute itsName="itemSelected">
      <type itemref="docSchema:BlockEvent"/>
    </Attribute>
  </Kind>

  <!--
    ContextMenu
  -->
  <Kind itsName="ContextMenu">
    <classes key="python">osaf.framework.blocks.ControlBlocks.ContextMenu</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
  </Kind>
  
  <Kind itsName="ContextMenuItem">
    <classes key="python">osaf.framework.blocks.ControlBlocks.ContextMenuItem</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Attribute itsName="title">
      <type itemref="String"/>
    </Attribute>
    
    <attributes itemref="docSchema:event"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:ContextMenuItem/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:ContextMenuItem/DefaultCloud"/>
  </Kind>
  <!--
    EditText
  -->
  <Kind itsName="EditText">
    <classes key="python">osaf.framework.blocks.ControlBlocks.EditText</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Enumeration itsName="lineStyleEnumType">
      <values>SingleLine</values>
      <values>MultiLine</values>
    </Enumeration>

    <Attribute itsName="lineStyleEnum">
      <type itemref="docSchema:EditText/lineStyleEnumType"/>
    </Attribute>

    <Enumeration itsName="textStyleEnumType">
      <values>PlainText</values>
      <values>RichText</values>
    </Enumeration>

    <Attribute itsName="textStyleEnum">
      <type itemref="docSchema:EditText/textStyleEnumType"/>
      <initialValue type="docSchema:EditText/textStyleEnumType" value="PlainText"/>
    </Attribute>

    <Attribute itsName="readOnly">
      <type itemref="Boolean"/>
    </Attribute>

    <attributes itemref="docSchema:textAlignmentEnum"/>
    <attributes itemref="docSchema:characterStyle"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="characterStyle">
            <attribute value="characterStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:EditText/DefaultCloud/characterStyle"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:EditText/DefaultCloud"/>
  </Kind>

  <!--
    HTML
  -->
  <Kind itsName="HTML">
    <classes key="python">osaf.framework.blocks.ControlBlocks.HTML</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    
    <Attribute itsName="url">
      <type itemref="String"/>
    </Attribute>
  </Kind>    
  
  <!--
    List
  -->
  <Kind itsName="List">
    <classes key="python">osaf.framework.blocks.ControlBlocks.List</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <attributes itemref="docSchema:columnHeadings"/>
    <attributes itemref="docSchema:columnData"/>
    <attributes itemref="docSchema:columnWidths"/>

    <attributes itemref="docSchema:elementDelegate"/>
    <attributes itemref="docSchema:selection"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="selection">
            <attribute value="selection"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:List/DefaultCloud/selection"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:List/DefaultCloud"/>
  </Kind>  

  <!--
    Table
  -->
  <Kind itsName="Table">
    <classes key="python">osaf.framework.blocks.ControlBlocks.Table</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Attribute itsName="selection">
      <cardinality>list</cardinality>
      <type itemref="List"/>
      <initialValue />
    </Attribute>
    
    <Attribute itsName="selectedItemToView">
      <type itemref="Item"/>
      <initialValue itemref="None"/>
    </Attribute>
    
    <Attribute itsName="hideColumnHeadings">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <attributes itemref="docSchema:columnHeadings"/>
    <attributes itemref="docSchema:columnHeadingTypes"/>
    <attributes itemref="docSchema:columnData"/>
    <attributes itemref="docSchema:columnWidths"/>

    <attributes itemref="docSchema:elementDelegate"/>
    <attributes itemref="docSchema:Table/selection"/>
    <attributes itemref="docSchema:Table/selectedItemToView"/>
    <attributes itemref="docSchema:Table/hideColumnHeadings"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="selectedItemToView">
            <attribute value="selectedItemToView"/>
            <includePolicy value="byCloud"/>
        </Endpoint>
        <endpoints itemref="docSchema:Table/DefaultCloud/selectedItemToView"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Table/DefaultCloud"/>

  </Kind>  

  <!--
    Tree
  -->
  <Kind itsName="Tree">
    <classes key="python">osaf.framework.blocks.ControlBlocks.Tree</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Attribute itsName="hideRoot">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>

    <Attribute itsName="noLines">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>

    <Attribute itsName="useButtons">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>

    <Attribute itsName="openedContainers">
      <type itemref="Boolean"/>
      <cardinality>dict</cardinality>
      <initialValue />
    </Attribute>

    <Attribute itsName="rootPath">
      <type itemref="Item"/>
      <initialValue itemref="None"/>
    </Attribute>

    <attributes itemref="docSchema:columnHeadings"/>
    <attributes itemref="docSchema:columnData"/>
    <attributes itemref="docSchema:columnWidths"/>

    <attributes itemref="docSchema:elementDelegate"/>
    <attributes itemref="docSchema:selection"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="selection">
            <attribute value="selection"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:Tree/DefaultCloud/selection"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Tree/DefaultCloud"/>
  </Kind>  

  <!--
    RadioBox
  -->
  <Kind itsName="RadioBox">
    <classes key="python">osaf.framework.blocks.ControlBlocks.RadioBox</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    
    <Attribute itsName="title">
      <type itemref="String"/>
    </Attribute>
    
    <Attribute itsName="choices">
      <type itemref="String"/>
      <cardinality>list</cardinality>
    </Attribute>
    
    <Enumeration itsName="radioAlignEnumType">
      <values>Across</values>
      <values>Down</values>
    </Enumeration>
    
    <Attribute itsName="radioAlignEnum">
      <type itemref="docSchema:RadioBox/radioAlignEnumType"/>
    </Attribute>
    
    <Attribute itsName="itemsPerLine">
      <type itemref="Integer"/>
    </Attribute>

    <attributes itemref="docSchema:event"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:RadioBox/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:RadioBox/DefaultCloud"/>
  </Kind>

  <!--
    SplitterWindow
  -->
  <Kind itsName="SplitterWindow">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.SplitterWindow</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    
    <Attribute itsName="splitPercentage">
      <type itemref="Float"/>
      <initialValue type="Float">0.5</initialValue>
    </Attribute>
    
    <Attribute itsName="allowResize">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">True</initialValue>
    </Attribute>
    
    <attributes itemref="docSchema:orientationEnum"/>
  </Kind>  

  <!--
    StaticText
  -->
  <Kind itsName="StaticText">
    <classes key="python">osaf.framework.blocks.ControlBlocks.StaticText</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Attribute itsName="title">
      <type itemref="String"/>
    </Attribute>
    
    <attributes itemref="docSchema:textAlignmentEnum"/>
    <attributes itemref="docSchema:characterStyle"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="characterStyle">
            <attribute value="characterStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:StaticText/DefaultCloud/characterStyle"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:StaticText/DefaultCloud"/>
  </Kind>

  <!--
    StatusBar
  -->
  <Kind itsName="StatusBar">
    <classes key="python">osaf.framework.blocks.ControlBlocks.StatusBar</classes>
    <superKinds itemref="docSchema:Block"/>
  </Kind>

  <!--
    ViewContainer
  -->
  <Kind itsName="ViewContainer">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.ViewContainer</classes>
    <superKinds itemref="docSchema:BoxContainer"/>

    <Enumeration itsName="tabPositionEnumType">
      <values>Top</values>
      <values>Bottom</values>
      <values>Right</values>
      <values>Left</values>
    </Enumeration>

    <Attribute itsName="tabPositionEnum">
      <type itemref="docSchema:ViewContainer/tabPositionEnumType"/>
      <initialValue type="docSchema:ViewContainer/tabPositionEnumType">Top</initialValue>
    </Attribute>

    <Attribute itsName="hasTabs">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Attribute itsName="selectionIndex">
      <type itemref="Integer"/>
      <initialValue type="Integer">0</initialValue>
    </Attribute>

    <Attribute itsName="views">
      <type itemref="docSchema:Block"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:Block/viewContainer"/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="views">
            <attribute value="views"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:ViewContainer/DefaultCloud/views"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:ViewContainer/DefaultCloud"/>
  </Kind>  
  
  <!--
    FrameWindow
  -->
  <Kind itsName="FrameWindow">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.FrameWindow</classes>
    <superKinds itemref="docSchema:ViewContainer"/>

    <Attribute itsName="position">
      <type itemref="docSchema:PositionType"/>
      <initialValue type="docSchema:PositionType">-1,-1</initialValue>
    </Attribute>
  </Kind>  

  <!--
    TabbedContainer
  -->
  <Kind itsName="TabbedContainer">
    <classes key="python">osaf.framework.blocks.ContainerBlocks.TabbedContainer</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <Enumeration itsName="tabPosEnumType">
      <values>Top</values>
      <values>Bottom</values>
      <values>Right</values>
      <values>Left</values>
    </Enumeration>

    <Attribute itsName="tabPosEnum">
      <type itemref="docSchema:TabbedContainer/tabPosEnumType"/>
      <initialValue type="docSchema:TabbedContainer/tabPosEnumType">Top</initialValue>
    </Attribute>
    
    <Attribute itsName="tabNames">
      <type itemref="String"/>
      <cardinality>list</cardinality>
    </Attribute>
  </Kind>  
  
  <!--
    Toolbar
  -->
  <Kind itsName="Toolbar">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.Toolbar</classes>
    <superKinds itemref="docSchema:RectangularChild"/>
    <superKinds itemref="docSchema:DynamicContainer"/>

    <Attribute itsName="toolSize">
      <type itemref="docSchema:SizeType"/>
    </Attribute>
    
    <Attribute itsName="separatorWidth">
      <type itemref="Integer"/>
      <initialValue type="Integer">5</initialValue>
    </Attribute>
    
    <Attribute itsName="buttons3D">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <Attribute itsName="buttonsLabeled">
      <type itemref="Boolean"/>
      <initialValue type="Boolean">False</initialValue>
    </Attribute>

    <attributes itemref="docSchema:colorStyle"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="colorStyle">
            <attribute value="colorStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:Toolbar/DefaultCloud/colorStyle"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Toolbar/DefaultCloud"/>
  </Kind>

  <!--
    ToolbarItem
  -->
  <Kind itsName="ToolbarItem">
    <classes key="python">osaf.framework.blocks.DynamicContainerBlocks.ToolbarItem</classes>
    <superKinds itemref="docSchema:Block"/>
    <superKinds itemref="docSchema:DynamicChild"/>

    <Attribute itsName="bitmap">
      <type itemref="String"/>
    </Attribute>
    
    <Attribute itsName="selectedBitmap">
      <type itemref="String"/>
      <initialValue type="String"/>
    </Attribute>
    
    <Enumeration itsName="toolbarItemKindEnumType">
      <values>Button</values>
      <values>Separator</values>
      <values>Check</values>
      <values>Radio</values>
      <values>Text</values>
      <values>Combo</values>
      <values>Choice</values>
    </Enumeration>
    
    <Attribute itsName="toolbarItemKind">
      <type itemref="docSchema:ToolbarItem/toolbarItemKindEnumType"/>
    </Attribute>
    
    <Attribute itsName="prototype">
      <description>The prototype block to be placed in the Toolbar</description>
      <type itemref="docSchema:Block"/>
    </Attribute>
    
    <Attribute itsName="label">
      <description>The label that goes under this ToolbarItem</description>
      <type itemref="String"/> 
      <initialValue type="String"></initialValue>
    </Attribute>
    
    <Attribute itsName="toggle">
      <description>For Buttons, makes it stay pressed down until pressed again.</description>
      <type itemref="Boolean"/> 
      <initialValue type="Boolean">False</initialValue>
    </Attribute>
    
    <attributes itemref="docSchema:event"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="prototype">
            <attribute value="prototype"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:ToolbarItem/DefaultCloud/prototype"/>
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:ToolbarItem/DefaultCloud/event"/>
    </Cloud>
    <!-- Link this cloud with the ToolbarItem kind -->
    <clouds alias="default" itemref="docSchema:ToolbarItem/DefaultCloud"/>
  </Kind>

  <Kind itsName="Sidebar">
    <classes key="python">osaf.views.main.SideBar.Sidebar</classes>
    <superKinds itemref="docSchema:Table"/>

    <Attribute itsName="filterKind">
      <type itemref="Kind"/>
      <initialValue itemref="None"/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="filterKind">
            <attribute value="filterKind"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:Sidebar/DefaultCloud/filterKind"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Sidebar/DefaultCloud"/>
  </Kind>

  <Kind itsName="SidebarTrunkDelegate">
    <classes key="python">osaf.views.main.SideBar.SidebarTrunkDelegate</classes>
    <superKinds itemref="docSchema:TrunkDelegate"/>

    <Attribute itsName="tableTemplatePath">
      <type itemref="String"/>
    </Attribute>

    <Attribute itsName="calendarTemplatePath">
      <type itemref="String"/>
    </Attribute>

    <Attribute itsName="itemTupleKeyToCacheKey">
      <type itemref="Item"/>
      <cardinality>dict</cardinality>
      <initialValue/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="itemTupleKeyToCacheKey">
            <attribute value="itemTupleKeyToCacheKey"/>
            <includePolicy value="byRef"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:SidebarTrunkDelegate/DefaultCloud/itemTupleKeyToCacheKey"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:SidebarTrunkDelegate/DefaultCloud"/>
  </Kind>

  <Kind itsName="CPIATestSidebarTrunkDelegate">
    <classes key="python">osaf.views.main.SideBar.CPIATestSidebarTrunkDelegate</classes>
    <superKinds itemref="docSchema:TrunkDelegate"/>

    <Attribute itsName="templatePath">
      <type itemref="String"/>
    </Attribute>
  </Kind>

  <!-- Item Detail Block  -->

  <Kind itsName="ItemDetail">
    <classes key="python">osaf.framework.blocks.ControlBlocks.ItemDetail</classes>
    <superKinds itemref="docSchema:RectangularChild"/>

    <attributes itemref="docSchema:selection"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="selection">
            <attribute value="selection"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:ItemDetail/DefaultCloud/selection"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:ItemDetail/DefaultCloud"/>
  </Kind>

  <!--
  TrunkDelegate and TrunkParentBlock
  -->
  <!-- A TrunkDelegate produces assembled Trunks based on an Item to be displayed. -->
  <Kind itsName="TrunkDelegate">
    <classes key="python">osaf.framework.blocks.Trunk.TrunkDelegate</classes>
    <superKinds itemref="Item"/>

    <Attribute itsName="trunkParentBlock">
      <type itemref="docSchema:TrunkParentBlock"/>
      <inverseAttribute itemref="docSchema:TrunkParentBlock/trunkDelegate"/>
      <required>True</required>
    </Attribute>
  
    <issues value="We'd like to use itemrefs as keys, so reference tracking &amp; cleanup would work"/>
    <Attribute itsName="keyUUIDToTrunkUUID">
      <type itemref="docSchema:Block"/>
      <cardinality>dict</cardinality>
      <initialValue/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="trunkParentBlock">
            <attribute value="trunkParentBlock"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:TrunkDelegate/DefaultCloud/trunkParentBlock"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:TrunkDelegate/DefaultCloud"/>
  </Kind>
  
  <!-- A TrunkParentBlock knows which delegate to use to substitute-in 
       an appropriate Trunk. -->
  <Kind itsName="TrunkParentBlock">
    <classes key="python">osaf.framework.blocks.Trunk.TrunkParentBlock</classes>
    <superKinds itemref="docSchema:BoxContainer"/>

    <Attribute itsName="trunkDelegate">
      <type itemref="docSchema:TrunkDelegate"/>
      <inverseAttribute itemref="docSchema:TrunkDelegate/trunkParentBlock"/>
      <required>True</required>
    </Attribute>
    
    <Attribute itsName="detailItem">
      <type itemref="Item"/>
      <inverseAttribute itemref="docSchema:Block/detailItemOwner"/>
    </Attribute>

    <!-- Share the same trunkDelegate amongst all copies of the parent block -->
    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="trunkDelegate">
            <attribute value="trunkDelegate"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:TrunkParentBlock/DefaultCloud/trunkDelegate"/>
        <Endpoint itsName="detailItem">
            <attribute value="detailItem"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:TrunkParentBlock/DefaultCloud/detailItem"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:TrunkParentBlock/DefaultCloud"/>
  </Kind>
  
  <Kind itsName="DetailTrunkDelegate">
    <classes key="python">osaf.framework.blocks.detail.Detail.DetailTrunkDelegate</classes>
    <superKinds itemref="docSchema:TrunkDelegate"/>

    <!-- A stub block to copy as the root of each tree-of-blocks we build. -->
    <Attribute itsName="trunkStub">
      <type itemref="docSchema:Block"/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="trunkStub">
            <attribute value="trunkStub"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:DetailTrunkDelegate/DefaultCloud/trunkStub"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:DetailTrunkDelegate/DefaultCloud"/>
  </Kind>
  
 <!-- A mapping between an Item and the "root blocks" that should appear when an 
       Item inheriting from that Kind is displayed. (A "root block" should have a 
       "position" attribute to enable it to be sorted with other root blocks.) 
       (This is really only used by the detail view right now, but if I move its
       definition there, I end up with circular namespace references, which gives
       me weird parcel-loading errors, so I'm leaving it here.) -->
  <Kind itsName="TrunkSubtree">
    <superKinds itemref="Item"/>
    
    <Attribute itsName="key">
      <type itemref="Item"/>
      <required>True</required>
    </Attribute>
    
    <Attribute itsName="rootBlocks">
      <type itemref="docSchema:Block"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="docSchema:Block/parentTrunkSubtrees"/>
    </Attribute>
  </Kind>

  <!-- Content Item Detail Block -->
  
  <Kind itsName="ContentItemDetail">
    <classes key="python">osaf.framework.blocks.ControlBlocks.ContentItemDetail</classes>
    <superKinds itemref="docSchema:BoxContainer"/>
    
    <Attribute itsName="selectedItemsAttribute">
      <description>Specifies which attribute of the selected Item should be associated with this block.</description>
      <type itemref="String"/>
      <initialValue type="String"/>
    </Attribute>

    <attributes itemref="docSchema:colorStyle"/>    
  </Kind>    

  <Kind itsName="DetailRoot">
    <classes key="python">osaf.framework.blocks.detail.Detail.DetailRoot</classes>
    <superKinds itemref="docSchema:ContentItemDetail"/>
    
    <attributes itemref="docSchema:selection"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="selection">
            <attribute value="selection"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:DetailRoot/DefaultCloud/selection"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:DetailRoot/DefaultCloud"/>
  </Kind>    

  <!-- Timer Block  -->

  <Kind itsName="Timer">
    <classes key="python">osaf.framework.blocks.ControlBlocks.Timer</classes>
    <superKinds itemref="docSchema:Block"/>
    
    <Attribute itsName="event">
      <description>The event we'll send when we go off</description>
      <type itemref="docSchema:BlockEvent"/>
    </Attribute>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="event">
            <attribute value="event"/>
            <includePolicy value="byCloud"/>
            <cloudAlias value="default"/>
        </Endpoint>
        <endpoints itemref="docSchema:Timer/DefaultCloud/event"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:Timer/DefaultCloud"/>
  </Kind>

  <!-- Presentation Style Kind, used by Attribute Editor blocks -->
  <Kind itsName="PresentationStyle">
    <displayName itsValue="Presentation Style"/>

    <Enumeration itsName="LabelEnum">
      <values>OnLeft</values>
      <values>InPlace</values>
    </Enumeration>

    <Enumeration itsName="FormEnum">
      <values>Text</values>
      <values>Graphic</values>
    </Enumeration>

    <Attribute itsName="label">
      <description>If you want the block to show a label, tell the AE where to put it</description>
      <type itemref="docSchema:PresentationStyle/LabelEnum"/>
    </Attribute>
    <Attribute itsName="labelWidth">
      <description>OnLeft label needs a width to use for the label portion</description>
      <type itemref="Integer"/>
      <initialValue type="Integer" value="0"/>
    </Attribute>
    <Attribute itsName="labelBorder">
      <description>Border to use between the label and left or right edge</description>
      <type itemref="Integer"/>
      <initialValue type="Integer" value="0"/>
    </Attribute>
    <Attribute itsName="labelTextAlignmentEnum">
      <description>Text alignment enum for the label</description>
      <type itemref="docSchema:textAlignmentEnumType"/>
      <initialValue type="docSchema:textAlignmentEnumType" value="Right"/>
    </Attribute>
    <Attribute itsName="labelDisplayName">
      <description>Localized display name to use for the label</description>
      <type itemref="String"/>
    </Attribute>
    <Attribute itsName="form">
      <description>Overall selector for text form versus graphic form</description>
      <issues>Currently unused</issues>
      <type itemref="docSchema:PresentationStyle/FormEnum"/>
    </Attribute>
    
    <Cloud itsName="DefaultCloud">
      <Endpoint itsName="label">
          <attribute value="label"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/label"/>
      <Endpoint itsName="labelWidth">
          <attribute value="labelWidth"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/labelWidth"/>
      <Endpoint itsName="labelBorder">
          <attribute value="labelBorder"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/labelBorder"/>
      <Endpoint itsName="labelTextAlignmentEnum">
          <attribute value="labelTextAlignmentEnum"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/labelTextAlignmentEnum"/>
      <Endpoint itsName="labelDisplayName">
          <attribute value="labelDisplayName"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/labelDisplayName"/>
      <Endpoint itsName="form">
          <attribute value="form"/>
          <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="docSchema:PresentationStyle/DefaultCloud/form"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:PresentationStyle/DefaultCloud"/>

  </Kind>

  <!-- Attribute Editor Block Kind -->
  <Kind itsName="AEBlock">
    <displayName value="Attribute Editor Block Kind"/>
    <description>Block that instantiates an appropriate Attribute Editor.</description>
    <superKinds itemref="docSchema:RectangularChild"/>
    <classes key="python">osaf.framework.blocks.ControlBlocks.AEBlock</classes>
    
    <Attribute itsName="presentationStyle">
      <type itemref="docSchema:PresentationStyle"/>
    </Attribute>

    <attributes itemref="docSchema:characterStyle"/>
    <attributes itemref="docSchema:EditText/readOnly"/>

    <Cloud itsName="DefaultCloud">
        <Endpoint itsName="characterStyle">
            <attribute value="characterStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:AEBlock/DefaultCloud/characterStyle"/>
        <Endpoint itsName="presentationStyle">
            <attribute value="presentationStyle"/>
            <includePolicy value="byRef"/>
        </Endpoint>
        <endpoints itemref="docSchema:AEBlock/DefaultCloud/presentationStyle"/>
    </Cloud>
    <clouds alias="default" itemref="docSchema:AEBlock/DefaultCloud"/>

  </Kind>
  
</Parcel>

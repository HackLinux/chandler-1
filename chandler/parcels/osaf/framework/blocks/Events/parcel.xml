<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/osaf/framework/blocks/Events"
             itsName="Events"
             xmlns:core="http://osafoundation.org/parcels/core"
             xmlns="http://osafoundation.org/parcels/osaf/framework/blocks"
             xmlns:events="http://osafoundation.org/parcels/osaf/framework/blocks/Events"
             xmlns:content="http://osafoundation.org/parcels/osaf/views/content"
             xmlns:doc="http://osafoundation.org/parcels/osaf/views/main">

  <description>Events, need to be defined in a different parcel than the schema because 
of a limitation of the XML format, which will be eliminated</description>
  <version>0.3</version>

  <EventList itsName="GlobalEvents">
    <subscribeAlwaysEvents itemref="events:NULL"/>
    <subscribeAlwaysEvents itemref="events:New"/>
    <subscribeAlwaysEvents itemref="events:Open"/>
    <subscribeAlwaysEvents itemref="events:NewItemCollectionItem"/>
    <subscribeAlwaysEvents itemref="events:Close"/>
    <subscribeAlwaysEvents itemref="events:Quit"/>
    <subscribeAlwaysEvents itemref="events:Undo"/>
    <subscribeAlwaysEvents itemref="events:Redo"/>
    <subscribeAlwaysEvents itemref="events:Cut"/>
    <subscribeAlwaysEvents itemref="events:Copy"/>
    <subscribeAlwaysEvents itemref="events:Paste"/>
    <subscribeAlwaysEvents itemref="events:Delete"/>
    <subscribeAlwaysEvents itemref="events:Preferences"/>
    <subscribeAlwaysEvents itemref="events:SharingSubscribeToCollection"/>
    <subscribeAlwaysEvents itemref="events:EditAccountPreferences"/>
    <subscribeAlwaysEvents itemref="events:ShowColumn"/>
    <subscribeAlwaysEvents itemref="events:GetNewMail"/>
    <subscribeAlwaysEvents itemref="events:SelectionChanged"/>
    <subscribeAlwaysEvents itemref="events:RequestSelectSidebarItem"/>
    <subscribeAlwaysEvents itemref="events:RequestSelectItem"/>
    <subscribeAlwaysEvents itemref="events:EnterPressed"/>
    <subscribeAlwaysEvents itemref="events:GenerateContentItems"/>
    <subscribeAlwaysEvents itemref="events:GenerateContacts"/>
    <subscribeAlwaysEvents itemref="events:GenerateNotes"/>
    <subscribeAlwaysEvents itemref="events:GenerateCalendarEventItems"/>    
    <subscribeAlwaysEvents itemref="events:CheckRepository"/>
    <subscribeAlwaysEvents itemref="events:ShowViewChanges"/>
    <subscribeAlwaysEvents itemref="events:ShowRepositoryHistory"/>
    <subscribeAlwaysEvents itemref="events:ShowPyCrust"/>
    <subscribeAlwaysEvents itemref="events:ReloadParcels"/>
    <subscribeAlwaysEvents itemref="events:CommitRepository"/>
    <subscribeAlwaysEvents itemref="events:AboutChandler"/>    
    <subscribeAlwaysEvents itemref="events:SelectedDateChanged"/>
  </EventList>

  <BlockEvent itsName="NULL">
    <description>The NULL event, used when no event is needed. </description>
    <examples>An unimplemented MenuItem</examples>
    <dispatchEnum>SendToBlock</dispatchEnum>
    <dispatchToBlock itemref="doc:MainView"/>
  </BlockEvent>

  <BlockEvent itsName="New">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Open">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <ModifyContentsEvent itsName="NewItemCollectionItem">
    <dispatchEnum>SendToBlock</dispatchEnum>
    <dispatchToBlock itemref="doc:Sidebar"/>
    <methodName>onModifyContentsEvent</methodName>
    <items itemref="content:UntitledView"/>
    <copyItems>True</copyItems>
  </ModifyContentsEvent>

  <BlockEvent itsName="Close">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Quit">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Undo">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Redo">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Cut">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Copy">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Paste">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Delete">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Preferences">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="SharingSubscribeToCollection">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="EditAccountPreferences">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="ShowColumn">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="GetNewMail">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="SelectionChanged">
    <dispatchEnum>BroadcastInsideMyEventBoundary</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="RequestSelectSidebarItem">
    <dispatchEnum>SendToBlock</dispatchEnum>
    <dispatchToBlock itemref="doc:Sidebar"/>
  </BlockEvent>

  <BlockEvent itsName="RequestSelectItem">
    <dispatchEnum>BroadcastInsideActiveViewEventBoundary</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="EnterPressed">
    <dispatchEnum>BroadcastInsideMyEventBoundary</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="SelectedDateChanged">
    <dispatchEnum>BroadcastEverywhere</dispatchEnum>
  </BlockEvent>

  <!-- Test Events -->
  <BlockEvent itsName="GenerateContentItems">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="GenerateContacts">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="GenerateNotes">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="GenerateCalendarEventItems">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="CheckRepository">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="ShowViewChanges">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="ShowRepositoryHistory">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="ShowPyCrust">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="ReloadParcels">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="CommitRepository">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="AboutChandler">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

</core:Parcel>

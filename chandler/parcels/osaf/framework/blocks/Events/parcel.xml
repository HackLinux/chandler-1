<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/osaf/framework/blocks/Events"
             itsName="Events"
             xmlns:core="http://osafoundation.org/parcels/core"
             xmlns="http://osafoundation.org/parcels/osaf/framework/blocks"
             xmlns:events="http://osafoundation.org/parcels/osaf/framework/blocks/Events"
             xmlns:content="http://osafoundation.org/parcels/osaf/views/content"
             xmlns:doc="http://osafoundation.org/parcels/osaf/views/main">

  <description>Events need to be defined in a different parcel than the schema because of a
limitation of the XML format. Applicaiton specific events should not be located here. 
Instead put them in a View in your application. Also don't put any references to 
application specific parcels here</description>
  <version>0.3</version>

  <EventList itsName="GlobalEvents">
    <!-- Don't add any events here unless your proposed event has been reviewed -->
    <subscribeAlwaysEvents itemref="events:About"/>    
    <subscribeAlwaysEvents itemref="events:Close"/>
    <subscribeAlwaysEvents itemref="events:Copy"/>
    <subscribeAlwaysEvents itemref="events:Cut"/>
    <subscribeAlwaysEvents itemref="events:Delete"/>
    <subscribeAlwaysEvents itemref="events:New"/>
    <subscribeAlwaysEvents itemref="events:Open"/>
    <subscribeAlwaysEvents itemref="events:Paste"/>
    <subscribeAlwaysEvents itemref="events:Preferences"/>
    <subscribeAlwaysEvents itemref="events:Quit"/>
    <subscribeAlwaysEvents itemref="events:Redo"/>
    <subscribeAlwaysEvents itemref="events:SelectedDateChanged"/>
    <subscribeAlwaysEvents itemref="events:Undo"/>

    <subscribeAlwaysEvents itemref="events:SelectionChanged"/>
    <subscribeAlwaysEvents itemref="events:SelectionChangedInsideActiveView"/>
    <subscribeAlwaysEvents itemref="events:RequestSelectSidebarItem"/>
    <subscribeAlwaysEvents itemref="events:EnterPressed"/>
  </EventList>

  <BlockEvent itsName="About">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Close">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Copy">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Cut">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Delete">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="New">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Open">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Paste">
    <dispatchEnum>FocusBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Preferences">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Quit">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Redo">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="SelectedDateChanged">
    <dispatchEnum>BroadcastEverywhere</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="Undo">
    <dispatchEnum>ActiveViewBubbleUp</dispatchEnum>
  </BlockEvent>


  <BlockEvent itsName="SelectionChanged">
    <dispatchEnum>BroadcastInsideMyEventBoundary</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="SelectionChangedInsideActiveView">
    <methodName>onSelectionChangedEvent</methodName>
    <dispatchEnum>BroadcastInsideActiveViewEventBoundary</dispatchEnum>
  </BlockEvent>

  <BlockEvent itsName="RequestSelectSidebarItem">
    <dispatchEnum>SendToBlock</dispatchEnum>
    <dispatchToBlock itemref="doc:Sidebar"/>
  </BlockEvent>

  <BlockEvent itsName="EnterPressed">
    <dispatchEnum>BroadcastInsideMyEventBoundary</dispatchEnum>
  </BlockEvent>

</core:Parcel>

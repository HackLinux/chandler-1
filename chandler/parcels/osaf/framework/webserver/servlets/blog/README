This servlet will run Pyblosxom inside of Chandler's Twisted web server.


SETUP

You need to have Pyblosxom installed on your system somewhere, for example:

ls -F ~/pyblosxom_installation
Pyblosxom/      content/        logs/           plugins/

Into your plugins directory you should copy (or preferably symlink to) the
pybl_plugin.py file.

You also need to copy pybl_config.py.dist to pybl_config.py (within the
same directory as this README) and make your edits to pybl_config.py.
Set py["codebase"] to the directory above the Pyblosxom directory (so in
my case it's py["codebase"]="/Users/morgen/pyblosxom_installation").
I keep my Pyblosxom, content, logs, and plugins directories all beneath
a single parent directory, so if your layout is different, edit pybl_config.py
accordingly.

Also note the py['chandler_plugin_enable'] = True.  The pybl_plugin.py
activates itself only if this value is True.  What this means is
that you can leave that plugin in your plugins folder and it shouldn't
affect your normal running of Pyblosxom outside of Chandler (don't
set this value within your regular, non-chandler, config.py file).
I haven't tested this, however.

The other configuration option is whether to pull blog entries from the
filesystem (just like standard pyblosxom) or from the Chandler repository:

py['chandler_plugin_mode'] = "repository" # either "file" or "repository"

If you set this to "repository" it simply does a KindQuery for all
Note items and uses those as blog entries, instead of the entries
in the filesystem.


HOW IT WORKS

Pyblosxom runs as a CGI, and usually writes to stdout.  In order to embed
it inside a servlet I have to build a Pybl Request based on data from the
Twisted web request, and also provide a StringIO object for the renderer
to write to.  The plugin has a couple of callbacks which allow me to
inject CGI form data, and override the default renderer.  Once Pybl.run()
is done, the servlet strips the HTTP headers from the output StringIO and
returns the content as a string.

TODO

Handle the URI to select a subset of blog entries in repository mode.

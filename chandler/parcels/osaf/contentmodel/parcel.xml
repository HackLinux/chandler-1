<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Parcel manifest for Pim Schema -->
<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/osaf/contentmodel"
             itemName="contentmodel"
             xmlns:core="//Schema/Core"
	         xmlns:notes="//parcels/osaf/contentmodel/notes"
	         xmlns:contact="//parcels/osaf/contentmodel/contacts"
             xmlns="//parcels/osaf/contentmodel"
             itemClass="osaf.contentmodel.ContentModel.ContentModel">

  <core:displayName>Chandler Content Model</core:displayName>
  <core:description>Content Model for the 0.3 release</core:description>
  <core:version>0.3</core:version>
  <core:author>Open Source Applications Foundation</core:author>

<!-- Content Item -->
  <core:Enumeration itemName="ImportanceEnum">
    <core:displayName>Importance Enum</core:displayName>
    <core:values>important</core:values>
    <core:values>normal</core:values>
    <core:values>fyi</core:values>
  </core:Enumeration>

  <core:Attribute itemName="importance">
    <core:displayName>Importance</core:displayName>
    <core:description>Most items are of normal importance (no value need be show), 
      however some things may be flagged either highly important or merely 'fyi'.</core:description>
    <core:description>This attribute is also used in the mail schema, so we shouldn't make any changes here that would break e-mail interoperability features.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="ImportanceEnum"/>
  </core:Attribute>

  <core:Enumeration itemName="ContextEnum">
    <core:displayName>Context Enum</core:displayName>
    <core:values>home</core:values>
    <core:values>work</core:values>
  </core:Enumeration>

  <core:Attribute itemName="context">
    <core:displayName>Context</core:displayName>
    <core:description>Context can be home, work, or another value provided by the user</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="ContextEnum"/>
  </core:Attribute>

  <core:Attribute itemName="whoAttribute">
    <core:displayName>Who</core:displayName>
    <core:description>The attribute used to describe "who" for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">creator</core:defaultValue>
  </core:Attribute>

  <core:Attribute itemName="aboutAttribute">
    <core:displayName>About</core:displayName>
    <core:description>The attribute used to describe "about" for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">displayName</core:defaultValue>
  </core:Attribute>

  <core:Attribute itemName="dateAttribute">
    <core:displayName>Date</core:displayName>
    <core:description>The attribute with the most relevant date for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">createdOn</core:defaultValue>
  </core:Attribute>

  <core:Kind itemName="ContentItem">
    <core:superKinds itemref="core:Item"/>
    <core:displayName>Content Item</core:displayName>
    <core:examples>an Calendar Event -- 'Lunch with Tug'</core:examples>
    <core:examples>a Contact -- 'Terry Smith'</core:examples>
    <core:examples>a Task -- 'mail 1040 to IRS'</core:examples>
    <core:description>Content Item is the abstract super-kind for things like Contacts, Calendar Events, Tasks, Mail Messages, and Notes. Content Items are user-level items, which a user might file, categorize, share, and delete.</core:description>
    <core:attributes itemref="importance"/>
    <core:attributes itemref="context"/>
    <core:attributes itemref="contact:creator"/>
    <core:attributes itemref="core:Parcel/createdOn"/>
    <core:attributes itemref="core:Parcel/modifiedOn"/>
    <core:attributes itemref="notes:attachedNotes"/>
    <core:attributes itemref="notes:conversations"/>

    <!-- display attributes -->
    <core:attributes itemref="whoAttribute"/>
    <core:attributes itemref="aboutAttribute"/>
    <core:attributes itemref="dateAttribute"/>

    <core:classes key="python">osaf.contentmodel.ContentModel.ContentItem</core:classes>
  </core:Kind>

<!-- Project -->
  <core:Attribute itemName="parentProject">
    <core:displayName>Parent Project</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have one parent.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="subProjects"/>
  </core:Attribute>

  <core:Attribute itemName="subProjects">
    <core:displayName>Sub Projects</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have many sub-projects.</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="parentProject"/>
  </core:Attribute>

  <core:Kind itemName="Project">
    <core:superKinds itemref="core:Item"/>
    <core:displayName>Project</core:displayName>
    <core:examples>my "Housewarming Party" project</core:examples>
    <core:examples>my department's "Move to new building" project</core:examples>
    <core:examples>my company's "Open Seattle Store" project</core:examples>
    <core:description>Users can create projects to help organize their work. Users can take content items (like tasks and mail messages) and assign them to different projects.</core:description>
    <core:displayAttribute itemref="core:displayName"/>
    <core:attributes itemref="core:displayName"/>
    <core:attributes itemref="parentProject"/>
    <core:attributes itemref="subProjects"/>
    <core:classes key="python">osaf.contentmodel.ContentModel.Project</core:classes>
  </core:Kind>

<!-- Group -->
  <core:Kind itemName="Group">
    <core:displayName>"Playlist"/"Item Collection"</core:displayName>
    <core:description>See http://wiki.osafoundation.org/twiki/bin/view/Jungle/CollectionProject</core:description>
    <core:issues>We still need to work out some issues about how "playlists"/"item collections" are modeled.</core:issues>
    <core:issues>We need to find a name for these things.</core:issues>
    <core:superKinds itemref="ContentItem"/>
    <core:displayAttribute itemref="core:displayName"/>
    <core:attributes itemref="core:displayName"/>
    <core:classes key="python">osaf.contentmodel.ContentModel.Group</core:classes>
  </core:Kind>

</core:Parcel>
     

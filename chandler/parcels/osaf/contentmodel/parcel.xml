<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Parcel manifest for Pim Schema -->
<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/OSAF/contentmodel"
             itemName="contentmodel"
             xmlns:core="//Schema/Core"
	     xmlns:notes="//parcels/OSAF/contentmodel/notes"
	     xmlns:contact="//parcels/OSAF/contentmodel/contacts"
             xmlns="//parcels/OSAF/contentmodel"
             itemClass="OSAF.contentmodel.ContentModel.ContentModel">

  <core:displayName>Chandler Content Model</core:displayName>
  <core:description>Content Model for the 0.3 release</core:description>
  <core:version>0.3</core:version>
  <core:author>Open Source Applications Foundation</core:author>

  <core:Attribute itemName="name">
    <core:displayName>Name</core:displayName>
    <core:description>A name that a user gives to an item they create.</core:description>
    <core:issues>Should we just use "core:displayName" instead, rather than creating this new attribute, or should we make this a sub-attribute of "core:displayName"?</core:issues>
    <core:issues>This should always be a single-line string that displays in a one-line text field rather than a scrolling text box.</core:issues>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="core:String"/>
  </core:Attribute>

  <core:Enumeration itemName="PriorityLevel">
    <core:displayName>Priority Level Enum</core:displayName>
    <core:issues>Should we call this 'PriorityLevelEnum' instead of 'PriorityLevel', to be consistent with how we've named other Enumerations?</core:issues>
    <core:values>high</core:values>
    <core:values>medium</core:values>
    <core:values>low</core:values>
  </core:Enumeration>

  <core:Attribute itemName="priority">
    <core:displayName>Priority</core:displayName>
    <core:description>Priority can be 'high', 'medium', or 'low'.</core:description>
    <core:description>This 'priority' attribute is also used in the mail schema, so we shouldn't make any changes here that would break e-mail interoperability features.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="PriorityLevel"/>
  </core:Attribute>

<!-- Content Item -->
  <core:Attribute itemName="projects">
    <core:displayName>Projects</core:displayName>
    <core:description>List of projects this item belongs to.</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="itemsInProject"/>
  </core:Attribute>

  <core:Attribute itemName="groups">
    <core:displayName>"Playlists"/"Item Collections"</core:displayName>
    <core:description>List of "playlists"/"item collections" this item belongs to.</core:description>
    <core:issues>We still need to work out some issues about how "playlists"/"item collections" are modeled.</core:issues>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Group"/>
    <core:inverseAttribute itemref="itemsInGroup"/>
  </core:Attribute>

  <core:Attribute itemName="fyiLinks">
    <core:displayName>References</core:displayName>
    <core:description>Items that the user wants to keep reference pointers to from this item.</core:description>
    <core:issues>In our design meeting on 13 Jan 2004, we talked about deleting this attribute and implementing this feature using the "Playlists"/"Item Collections" attribute.</core:issues>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="ContentItem"/>
    <core:inverseAttribute itemref="fyiLinkedToItems"/>
  </core:Attribute>

  <core:Attribute itemName="fyiLinkedToItems">
    <core:displayName>Items with References to this item</core:displayName>
    <core:description>List of items that have references pointing to this item.</core:description>
    <core:issues>In our design meeting on 13 Jan 2004, we talked about deleting this attribute and implementing this feature using the "Playlists"/"Item Collections" attribute.</core:issues>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="ContentItem"/>
    <core:inverseAttribute itemref="fyiLinks"/>
  </core:Attribute>

  <core:Attribute itemName="whoAttribute">
    <core:displayName>Who</core:displayName>
    <core:description>The attribute used to describe "who" for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">creator</core:defaultValue>
  </core:Attribute>

  <core:Attribute itemName="aboutAttribute">
    <core:displayName>About</core:displayName>
    <core:description>The attribute used to describe "about" for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">displayName</core:defaultValue>
  </core:Attribute>

  <core:Attribute itemName="dateAttribute">
    <core:displayName>Date</core:displayName>
    <core:description>The attribute with the most relevant date for this content item</core:description>
    <core:issues>Should this apply to the kind or the item?</core:issues>
    <core:type itemref="core:Symbol"/>
    <core:cardinality>single</core:cardinality>
    <core:defaultValue type="core:Symbol">createdOn</core:defaultValue>
  </core:Attribute>

  <core:Kind itemName="ContentItem">
    <core:displayName>Content Item</core:displayName>
    <core:examples>an Calendar Event -- 'Lunch with Tug'</core:examples>
    <core:examples>a Contact -- 'Terry Smith'</core:examples>
    <core:examples>a Task -- 'mail 1040 to IRS'</core:examples>
    <core:description>Content Item is the abstract super-kind for things like Contacts, Calendar Events, Tasks, Mail Messages, and Notes. Content Items are user-level items, which a user might file, categorize, share, and delete.</core:description>
    <core:attributes itemref="projects"/>
    <core:attributes itemref="groups"/>
    <core:attributes itemref="contact:creator"/>
    <core:attributes itemref="core:Parcel/createdOn"/>
    <core:attributes itemref="core:Parcel/modifiedOn"/>
    <core:attributes itemref="fyiLinks"/>
    <core:attributes itemref="fyiLinkedToItems"/>
    <core:attributes itemref="notes:attachedNotes"/>
    <core:attributes itemref="notes:conversations"/>

    <!-- display attributes -->
    <core:attributes itemref="whoAttribute"/>
    <core:attributes itemref="aboutAttribute"/>
    <core:attributes itemref="dateAttribute"/>

    <core:classes key="python">OSAF.contentmodel.ContentModel.ContentItem</core:classes>
  </core:Kind>

<!-- Project -->
  <core:Attribute itemName="parentProject">
    <core:displayName>Parent Project</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have one parent.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="subProjects"/>
  </core:Attribute>

  <core:Attribute itemName="subProjects">
    <core:displayName>Sub Projects</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have many sub-projects.</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="parentProject"/>
  </core:Attribute>

  <core:Attribute itemName="itemsInProject">
    <core:displayName>Items in Project</core:displayName>
    <core:description>List of items that are marked as being in this project.</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="ContentItem"/>
    <core:inverseAttribute itemref="projects"/>
  </core:Attribute>

  <core:Kind itemName="Project">
    <core:displayName>Project</core:displayName>
    <core:examples>my "Housewarming Party" project</core:examples>
    <core:examples>my department's "Move to new building" project</core:examples>
    <core:examples>my company's "Open Seattle Store" project</core:examples>
    <core:description>Users can create projects to help organize their work. Users can take content items (like tasks and mail messages) and assign them to different projects.</core:description>
    <core:displayAttribute itemref="name"/>
    <core:attributes itemref="name"/>
    <core:attributes itemref="parentProject"/>
    <core:attributes itemref="subProjects"/>
    <core:attributes itemref="itemsInProject"/>
    <core:classes key="python">OSAF.contentmodel.ContentModel.Project</core:classes>
  </core:Kind>

<!-- Group -->
  <core:Attribute itemName="itemsInGroup">
    <core:displayName>Items in the "Playlist"/"Item Collection"</core:displayName>
    <core:description>List of items in the "playlist"/"item collection".</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="ContentItem"/>
    <core:inverseAttribute itemref="groups"/>
  </core:Attribute>

  <core:Kind itemName="Group">
    <core:displayName>"Playlist"/"Item Collection"</core:displayName>
    <core:description>See http://wiki.osafoundation.org/twiki/bin/view/Jungle/CollectionProject</core:description>
    <core:issues>We still need to work out some issues about how "playlists"/"item collections" are modeled.</core:issues>
    <core:issues>We need to find a name for these things.</core:issues>
    <core:superKinds itemref="ContentItem"/>
    <core:displayAttribute itemref="name"/>
    <core:attributes itemref="name"/>
    <core:attributes itemref="itemsInGroup"/>
    <core:classes key="python">OSAF.contentmodel.ContentModel.Group</core:classes>
  </core:Kind>

</core:Parcel>
     
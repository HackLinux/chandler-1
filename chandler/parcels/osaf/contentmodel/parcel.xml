<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Parcel manifest for Pim Schema -->
<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003-2004 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/osaf/contentmodel"
             itsName="contentmodel"
             xmlns:core="http://osafoundation.org/parcels/core"
             xmlns:contact="http://osafoundation.org/parcels/osaf/contentmodel/contacts"
             xmlns:calendar="http://osafoundation.org/parcels/osaf/contentmodel/calendar"
             xmlns:tasks="http://osafoundation.org/parcels/osaf/contentmodel/tasks"
             xmlns:mail="http://osafoundation.org/parcels/osaf/contentmodel/mail"
             xmlns:blocks="http://osafoundation.org/parcels/osaf/framework/blocks"
             xmlns:events="http://osafoundation.org/parcels/osaf/framework/notifications/schema"
             xmlns="http://osafoundation.org/parcels/osaf/contentmodel"
             itemClass="osaf.contentmodel.ContentModel.ContentModel">

  <core:displayName>Chandler Content Model</core:displayName>
  <core:description>Content Model for the 0.3 release</core:description>
  <core:version>0.3</core:version>
  <core:author>Open Source Applications Foundation</core:author>

<!-- Content Item -->
  
  <core:Attribute itsName="body">
    <core:displayName>Body</core:displayName>
    <core:type itemref="core:Text"/>
    <core:description>All Content Items may have a body to contain notes.  It's not decided yet whether
        this body would instead contain the payload for resource items such as presentations or 
        spreadsheets -- resource items haven't been nailed down yet -- but the payload may be different
        from the notes because payload needs to know MIME type, etc.</core:description>
  </core:Attribute>

  <core:Enumeration itsName="ImportanceEnum">
    <core:displayName>Importance Enum</core:displayName>
    <core:values>important</core:values>
    <core:values>normal</core:values>
    <core:values>fyi</core:values>
  </core:Enumeration>

  <core:Attribute itsName="importance">
    <core:displayName>Importance</core:displayName>
    <core:description>Most items are of normal importance (no value need be show), 
      however some things may be flagged either highly important or merely 'fyi'.</core:description>
    <core:description>This attribute is also used in the mail schema, so we shouldn't make any changes here that would break e-mail interoperability features.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="ImportanceEnum"/>
    <core:initialValue type="ImportanceEnum">normal</core:initialValue>
  </core:Attribute>

  <core:Enumeration itsName="SharingStatusEnum">
    <core:displayName>Sharing Status</core:displayName>
    <core:values>unshared</core:values>
    <core:values>pending</core:values>
    <core:values>uploaded</core:values>
    <core:values>downloaded</core:values>
    <core:values>error</core:values>
  </core:Enumeration>

  <core:Attribute itsName="sharingStatus">
    <core:type itemref="SharingStatusEnum"/>
    <core:initialValue type="SharingStatusEnum">unshared</core:initialValue>
  </core:Attribute>

  <core:Enumeration itsName="ContextEnum">
    <core:displayName>Context Enum</core:displayName>
    <core:values>home</core:values>
    <core:values>work</core:values>
  </core:Enumeration>

  <core:Attribute itsName="context">
    <core:displayName>Context</core:displayName>
    <core:description>Context can be home, work, or another value provided by the user</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="ContextEnum"/>
  </core:Attribute>

  <core:Attribute itsName="itemCollectionInclusions">
    <core:type itemref="ItemCollection"/>
    <core:cardinality>list</core:cardinality>
    <core:inverseAttribute itemref="ItemCollection/_inclusions"/>
  </core:Attribute>

  <core:Attribute itsName="itemCollectionExclusions">
    <core:type itemref="ItemCollection"/>
    <core:cardinality>list</core:cardinality>
    <core:inverseAttribute itemref="ItemCollection/_exclusions"/>
  </core:Attribute>

  <core:Attribute itsName="itemCollectionResults">
    <core:type itemref="ItemCollection"/>
    <core:cardinality>list</core:cardinality>
    <core:inverseAttribute itemref="ItemCollection/_results"/>
  </core:Attribute>

  <core:Attribute itsName="contentsOwner">
    <core:type itemref="blocks:Block"/>
    <core:cardinality>list</core:cardinality>
    <core:inverseAttribute itemref="blocks:Block/contents"/>
  </core:Attribute>

  <core:Kind itsName="ContentItem">
    <core:superKinds itemref="core:Item"/>
    <core:displayName>Default Content Item Display Name</core:displayName>
    <core:examples>an Calendar Event -- 'Lunch with Tug'</core:examples>
    <core:examples>a Contact -- 'Terry Smith'</core:examples>
    <core:examples>a Task -- 'mail 1040 to IRS'</core:examples>
    <core:description>Content Item is the abstract super-kind for things like Contacts, Calendar Events, Tasks, Mail Messages, and Notes. Content Items are user-level items, which a user might file, categorize, share, and delete.</core:description>
    <core:attributes itemref="body"/>
    <core:attributes itemref="importance"/>
    <core:attributes itemref="context"/>
    <core:attributes itemref="contact:creator"/>
    <core:attributes itemref="core:Parcel/createdOn"/>
    <core:attributes itemref="core:Parcel/modifiedOn"/>
    <core:attributes itemref="conversations"/>
    <core:attributes itemref="itemCollectionInclusions"/>
    <core:attributes itemref="itemCollectionExclusions"/>
    <core:attributes itemref="itemCollectionResults"/>
    <core:attributes itemref="contentsOwner"/>

    <core:Attribute itsName="etag">
      <core:type itemref="core:String"/>
    </core:Attribute>
    <core:Attribute itsName="lastModified">
      <core:type itemref="core:String"/>
    </core:Attribute>
    
    <core:attributes itemref="sharingStatus"/>
    <core:Attribute itsName="sharedURL">
      <core:type itemref="core:URL"/>
    </core:Attribute>
    <core:Attribute itsName="sharedUUID">
      <core:type itemref="core:UUID"/>
    </core:Attribute>
    <core:Attribute itsName="sharedVersion">
      <core:type itemref="core:Long"/>
      <core:initialValue type="core:Long">-1</core:initialValue>
    </core:Attribute>
    <core:Attribute itsName="isPrivate">
      <core:type itemref="core:Boolean"/>
      <core:initialValue type="core:Boolean">False</core:initialValue>
    </core:Attribute>

    <core:Attribute itsName="sharer">
      <description value="The person who initially published this item" />
      <issues value="Eventually this will point to a Contact or equivalent" />
      <type itemref="mail:EmailAddress" />
      <cardinality value="single" />
      <initialValue itemref="core:None" />
      <inverseAttribute itemref="mail:EmailAddress/sharerOf" />
    </core:Attribute>

    <core:Attribute itsName="sharees">
      <description value="The people who were invited to share in this item" />
      <issues value="Eventually this will point to a Contact or equivalent" />
      <type itemref="mail:EmailAddress" />
      <cardinality value="list" />
      <initialValue />
      <inverseAttribute itemref="mail:EmailAddress/shareeOf" />
    </core:Attribute>

    <core:Attribute itsName="previousStamps">
      <description value="A list of mixin items that were used as stamps on this item previously." />
      <core:type itemref="core:Item"/>
      <cardinality value="list" />
    </core:Attribute>

    <core:classes key="python">osaf.contentmodel.ContentModel.ContentItem</core:classes>
  </core:Kind>

  <!-- Processing Item -->
  <core:Enumeration itsName="processingStatusEnum">
    <core:displayName>Processing Status Enum</core:displayName>
    <core:values>processing</core:values>
    <core:values>deferred</core:values>
    <core:values>done</core:values>
    <core:values>junk</core:values>
    <core:values>trash</core:values>
  </core:Enumeration>

  <core:Attribute itsName="processingStatus">
    <core:type itemref="processingStatusEnum"/>
    <core:initialValue type="processingStatusEnum">processing</core:initialValue>
  </core:Attribute>

  <core:Kind itsName="ProcessingItem">
    <core:displayName>Processing Item</core:displayName>
    <core:description>Mixin kind to give an item Processing Status.</core:description>
    <core:issues>This could be just an attribute of Note, but we</core:issues>
    <core:issues> need to wrap it with a mixinKind to give Note a unique</core:issues>
    <core:issues> mixinKind signature for FindStampedKind(), or</core:issues>
    <core:issues> else we can't distinguish it from other plain ContentItems.</core:issues>
    <attributes itemref="processingStatus"/>
  </core:Kind>

  <!-- Note -->

  <core:Kind itsName="Note">
    <core:displayName>Note</core:displayName>
    <core:superKinds itemref="ContentItem"/>
    <core:superKinds itemref="ProcessingItem"/>
    <core:classes key="python">osaf.contentmodel.Notes.Note</core:classes>
    
    <!-- redirections -->
    <core:Attribute itsName="who">
      <redirectTo>creator</redirectTo>
    </core:Attribute>
  
    <core:Attribute itsName="about">
      <redirectTo>displayName</redirectTo>
    </core:Attribute>
  
    <core:Attribute itsName="date">
      <redirectTo>createdOn</redirectTo>
    </core:Attribute>
  </core:Kind>
  
  <!-- Conversation -->

  <core:Attribute itsName="conversations">
    <core:displayName>Conversations</core:displayName>
    <core:description>Conversations about this content item.</core:description>
    <core:issues>deletePolicy should be cascade</core:issues>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Conversation"/>
    <core:inverseAttribute itemref="subjectItem"/>
  </core:Attribute>

  <core:Attribute itsName="subjectItem">
    <core:displayName>Subject Item</core:displayName>
    <core:description>If this Conversation is a free-standing independent item, 
        then this attribute will be empty. If this Conversation is contained in 
        some other item, then this attribute will point to that item.</core:description>
    <core:required>False</core:required>
    <core:type itemref="ContentItem"/>
    <core:inverseAttribute itemref="conversations"/>
  </core:Attribute>

  <core:Attribute itsName="conversationLines">
    <core:displayName>Conversation Lines</core:displayName>
    <core:description>The list of lines of dialog in this conversation.</core:description>
    <core:issues>deletePolicy should be cascade</core:issues>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="ConversationLine"/>
    <core:inverseAttribute itemref="containedInConversation"/>
  </core:Attribute>

  <core:Kind itsName="Conversation">
    <core:displayName>Conversation</core:displayName>
    <core:superKinds itemref="ContentItem"/>
    <core:attributes itemref="subjectItem"/>
    <core:attributes itemref="conversationLines"/>
    <core:classes key="python">osaf.contentmodel.Notes.Conversation</core:classes>
  </core:Kind>
  
  <core:Attribute itsName="line">
    <core:displayName>Line</core:displayName>
    <core:description>A line of text in a conversation, such as "okay, let's meet at 5:00".</core:description>
    <core:type itemref="core:String"/>
  </core:Attribute>

  <core:Attribute itsName="timestamp">
    <core:displayName>Timestamp</core:displayName>
    <core:type itemref="core:DateTime"/>
  </core:Attribute>

  <core:Attribute itsName="containedInConversation">
    <core:displayName>Contained in Conversation</core:displayName>
    <core:description>The Conversation that this line is a part of.</core:description>
    <core:required>True</core:required>
    <core:type itemref="Conversation"/>
    <core:inverseAttribute itemref="conversationLines"/>
  </core:Attribute>

  <core:Kind itsName="ConversationLine">
    <core:superKinds itemref="core:Item"/>
    <core:displayName>Conversation Line</core:displayName>
    <core:issues>Perhaps for performance reasons we should implement 'ConversationLine' 
        as a struct rather than a first-class Kind.</core:issues>
    <core:attributes itemref="line"/>
    <core:attributes itemref="timestamp"/>
    <core:attributes itemref="containedInConversation"/>
  </core:Kind>

<!-- Stamped Kinds -->

  <core:Kind itsName="MailedTask">
    <core:displayName>Mailed Task</core:displayName>
    <core:description>A Task stamped as a Mail, or vica versa</core:description>
    <core:superKinds itemref="tasks:TaskMixin"/>
    <core:superKinds itemref="mail:MailMessage"/>
  </core:Kind>

  <core:Kind itsName="MailedEvent">
    <core:displayName>Mailed Event</core:displayName>
    <core:description>An Event stamped as a Mail, or vica versa</core:description>
    <core:superKinds itemref="calendar:CalendarEventMixin"/>
    <core:superKinds itemref="mail:MailMessage"/>
  </core:Kind>

  <core:Kind itsName="EventTask">
    <core:displayName>Event Task</core:displayName>
    <core:description>A Task stamped as an Event, or vica versa</core:description>
    <core:superKinds itemref="tasks:TaskMixin"/>
    <core:superKinds itemref="tasks:TaskEventExtraMixin"/>
    <core:superKinds itemref="calendar:CalendarEvent"/>
  </core:Kind>

  <core:Kind itsName="MailedEventTask">
    <core:displayName>Mailed Event Task</core:displayName>
    <core:description>A Task stamped as an Event stamped as Mail, in any sequence</core:description>
    <core:superKinds itemref="tasks:TaskMixin"/>
    <core:superKinds itemref="tasks:TaskEventExtraMixin"/>
    <core:superKinds itemref="calendar:CalendarEventMixin"/>
    <core:superKinds itemref="mail:MailMessage"/>
  </core:Kind>

<!-- Project -->

  <core:Attribute itsName="parentProject">
    <core:displayName>Parent Project</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have one parent.</core:description>
    <core:cardinality>single</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="subProjects"/>
  </core:Attribute>

  <core:Attribute itsName="subProjects">
    <core:displayName>Sub Projects</core:displayName>
    <core:description>Projects can be organized into hierarchies. Each project can have many sub-projects.</core:description>
    <core:cardinality>list</core:cardinality>
    <core:type itemref="Project"/>
    <core:inverseAttribute itemref="parentProject"/>
  </core:Attribute>

  <core:Kind itsName="Project">
    <core:superKinds itemref="core:Item"/>
    <core:displayName>Project</core:displayName>
    <core:examples>my "Housewarming Party" project</core:examples>
    <core:examples>my department's "Move to new building" project</core:examples>
    <core:examples>my company's "Open Seattle Store" project</core:examples>
    <core:description>Users can create projects to help organize their work. Users can take content items (like tasks and mail messages) and assign them to different projects.</core:description>
    <core:displayAttribute itemref="core:displayName"/>
    <core:attributes itemref="core:displayName"/>
    <core:attributes itemref="parentProject"/>
    <core:attributes itemref="subProjects"/>
    <core:classes key="python">osaf.contentmodel.ContentModel.Project</core:classes>
  </core:Kind>

<!-- Group -->
  <core:Kind itsName="Group">
    <core:displayName>"Playlist"/"Item Collection"</core:displayName>
    <core:description>See http://wiki.osafoundation.org/twiki/bin/view/Jungle/CollectionProject</core:description>
    <core:issues>We still need to work out some issues about how "playlists"/"item collections" are modeled.</core:issues>
    <core:issues>We need to find a name for these things.</core:issues>
    <core:superKinds itemref="ContentItem"/>
    <core:displayAttribute itemref="core:displayName"/>
    <core:attributes itemref="core:displayName"/>
    <core:classes key="python">osaf.contentmodel.ContentModel.Group</core:classes>
  </core:Kind>


  <!-- ItemCollection -->

  <core:Kind itsName="ItemCollection">
    <core:classes key="python">osaf.contentmodel.ItemCollection.ItemCollection</core:classes>
    <core:superKinds itemref="ContentItem"/>

    <core:displayName>Item Collection</core:displayName>

    <core:Attribute itsName="_rule">
      <core:type itemref="core:String"/>
      <core:initialValue type="core:String"></core:initialValue>
    </core:Attribute>

    <core:Attribute itsName="_inclusions">
      <core:type itemref="core:Item"/>
      <core:cardinality>list</core:cardinality>
      <core:inverseAttribute itemref="itemCollectionInclusions"/>
      <initialValue/>
    </core:Attribute>

    <core:Attribute itsName="_exclusions">
      <type itemref="core:Item"/>
      <core:cardinality>list</core:cardinality>
      <core:inverseAttribute itemref="itemCollectionExclusions"/>
      <initialValue/>
    </core:Attribute>

    <core:Attribute itsName="_filterKinds">
      <type itemref="core:String"/>
      <core:cardinality>list</core:cardinality>
      <initialValue/>
    </core:Attribute>

    <core:Attribute itsName="_results">
      <type itemref="core:Item"/>
      <core:cardinality>list</core:cardinality>
      <core:inverseAttribute itemref="itemCollectionResults"/>
      <initialValue/>
    </core:Attribute>

    <core:Attribute itsName="queryStringStale">
      <core:type itemref="core:Boolean"/>
      <initialValue type="core:Boolean" value="True"/>
    </core:Attribute>

    <core:Attribute itsName="resultsStale">
      <core:type itemref="core:Boolean"/>
      <initialValue type="core:Boolean" value="True"/>
    </core:Attribute>

    <core:Attribute itsName="indexName">
      <core:type itemref="core:String"/>
      <core:initialValue type="core:String">__adhoc__</core:initialValue>
    </core:Attribute>

    <core:attributes itemref="ItemCollection/_rule"/>
    <core:attributes itemref="ItemCollection/_inclusions"/>
    <core:attributes itemref="ItemCollection/_exclusions"/>
    <core:attributes itemref="ItemCollection/_filterKinds"/>
    <core:attributes itemref="ItemCollection/_results"/>
    <core:attributes itemref="ItemCollection/queryStringStale"/>
    <core:attributes itemref="ItemCollection/resultsStale"/>
    <core:attributes itemref="ItemCollection/indexName"/>

    <!-- redirections -->
    <core:Attribute itsName="who"> 	 
      <redirectTo>sharees</redirectTo> 	 
    </core:Attribute> 	 
    
    <core:Attribute itsName="whoFrom"> 	 
      <redirectTo>sharer</redirectTo> 	 
    </core:Attribute> 	 
    
    <core:Attribute itsName="about"> 	 
      <redirectTo>displayName</redirectTo> 	 
    </core:Attribute> 	 
    
    <!-- Default Cloud -->
    <core:Cloud itsName="DefaultCloud">
      <core:Endpoint itsName="_inclusions">
        <attribute value="_inclusions"/>
        <includePolicy value="byCloud"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/_inclusions"/>
      <core:Endpoint itsName="_exclusions">
        <attribute value="_exclusions"/>
        <includePolicy value="byCloud"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/_exclusions"/>
      <core:Endpoint itsName="_filterKinds">
        <attribute value="_filterKinds"/>
        <includePolicy value="byCloud"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/_filterKinds"/>
      <core:Endpoint itsName="_results">
        <attribute value="_results"/>
        <includePolicy value="byCloud"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/_results"/>
      <core:Endpoint itsName="collectionOwner">
        <attribute value="collectionOwner"/>
        <includePolicy value="byCloud"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/collectionOwner"/>
      <core:Endpoint itsName="sharer">
        <attribute value="sharer"/>
        <includePolicy value="byValue"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/sharer"/>
      <core:Endpoint itsName="sharees">
        <attribute value="sharees"/>
        <includePolicy value="byValue"/>
      </core:Endpoint>
      <endpoints itemref="ItemCollection/DefaultCloud/sharees"/>
    </core:Cloud>
    <clouds alias="default" itemref="ItemCollection/DefaultCloud"/>

  </core:Kind>


</core:Parcel>

<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Parcel manifest for Pim Schema -->
<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003-2004 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<Parcel itsName="contentmodel"
    itemClass="osaf.contentmodel.ContentModel.ContentModel"
    xmlns="http://osafoundation.org/parcels/core"
    xmlns:contact="http://osafoundation.org/parcels/osaf/contentmodel/contacts"
    xmlns:calendar="http://osafoundation.org/parcels/osaf/contentmodel/calendar"
    xmlns:tasks="http://osafoundation.org/parcels/osaf/contentmodel/tasks"
    xmlns:mail="http://osafoundation.org/parcels/osaf/contentmodel/mail"
    xmlns:blocks="http://osafoundation.org/parcels/osaf/framework/blocks"
    xmlns:events="http://osafoundation.org/parcels/osaf/framework/notifications/schema"
    xmlns:cm="http://osafoundation.org/parcels/osaf/contentmodel"
    >

    <displayName>Chandler Content Model</displayName>
    <description>Content Model for the 0.5 release</description>
    <version>0.5</version>
    <author>Open Source Applications Foundation</author>

    <!-- Content Item -->

    <Kind itsName="ContentItem">
        <superKinds itemref="Item"/>
        <classes key="python">osaf.contentmodel.ContentModel.ContentItem</classes>
        <displayName>Default Content Item Display Name</displayName>
        <examples>an Calendar Event -- 'Lunch with Tug'</examples>
        <examples>a Contact -- 'Terry Smith'</examples>
        <examples>a Task -- 'mail 1040 to IRS'</examples>
        <description>Content Item is the abstract super-kind for things like Contacts, Calendar Events, Tasks, Mail Messages, and Notes. Content Items are user-level items, which a user might file, categorize, share, and delete.</description>
        <Attribute itsName="body">
            <displayName>Body</displayName>
            <type itemref="Text"/>
            <description>All Content Items may have a body to contain notes.  It's not decided yet whether this body would instead contain the payload for resource items such as presentations or spreadsheets -- resource items haven't been nailed down yet -- but the payload may be different from the notes because payload needs to know MIME type, etc.</description>
        </Attribute>

        <Attribute itsName="importance">
            <displayName>Importance</displayName>
            <description>Most items are of normal importance (no value need be show), however some things may be flagged either highly important or merely 'fyi'. This attribute is also used in the mail schema, so we shouldn't make any changes here that would break e-mail interoperability features.</description>

            <Enumeration itsName="ImportanceEnum">
                <displayName>Importance Enum</displayName>
                <values>important</values>
                <values>normal</values>
                <values>fyi</values>
            </Enumeration>

            <type itemref="cm:ContentItem/importance/ImportanceEnum"/>
            <initialValue type="cm:ContentItem/importance/ImportanceEnum">normal</initialValue>

        </Attribute>

        <Attribute itsName="sharingStatus">

            <Enumeration itsName="SharingStatusEnum">
                <displayName>Sharing Status</displayName>
                <values>unshared</values>
                <values>pending</values>
                <values>uploaded</values>
                <values>downloaded</values>
                <values>error</values>
            </Enumeration>

            <type itemref="cm:ContentItem/sharingStatus/SharingStatusEnum"/>
            <initialValue type="cm:ContentItem/sharingStatus/SharingStatusEnum">unshared</initialValue>

        </Attribute>

        <Attribute itsName="itemCollectionInclusions">
            <type itemref="cm:ItemCollection"/>
            <cardinality>list</cardinality>
            <inverseAttribute itemref="cm:ItemCollection/_inclusions"/>
        </Attribute>

        <Attribute itsName="itemCollectionExclusions">
            <type itemref="cm:ItemCollection"/>
            <cardinality>list</cardinality>
            <inverseAttribute itemref="cm:ItemCollection/_exclusions"/>
        </Attribute>

        <Attribute itsName="itemCollectionResults">
            <type itemref="cm:ItemCollection"/>
            <cardinality>list</cardinality>
            <inverseAttribute itemref="cm:ItemCollection/_results"/>
        </Attribute>

        <Attribute itsName="contentsOwner">
            <type itemref="blocks:Block"/>
            <cardinality>list</cardinality>
            <inverseAttribute itemref="blocks:Block/contents"/>
        </Attribute>

        <Attribute itsName="createdOn">
            <displayName>Created On</displayName>
            <description>DateTime this item was created</description>
            <type itemref="DateTime"/>
        </Attribute>

        <Attribute itsName="modifiedOn">
            <displayName>Last Modified On</displayName>
            <description>DateTime this item was last modified</description>
            <type itemref="DateTime"/>
        </Attribute>

        <Attribute itsName="creator">
            <displayName>Created By</displayName>
            <description>Link to the contact who created the item.</description>
            <type itemref="contact:Contact"/>
            <inverseAttribute itemref="contact:Contact/itemsCreated"/>
        </Attribute>

        <Attribute itsName="lastModifiedBy">
            <displayName>Last Modified By</displayName>
            <description>Link to the contact who last modified the item.</description>
            <type itemref="contact:Contact"/>
            <inverseAttribute itemref="contact:Contact/itemsLastModified"/>
        </Attribute>

        <Attribute itsName="etag">
            <type itemref="String"/>
        </Attribute>

        <Attribute itsName="lastModified">
            <type itemref="String"/>
        </Attribute>

        <Attribute itsName="sharedURL">
            <type itemref="URL"/>
        </Attribute>

        <Attribute itsName="sharedUUID">
            <type itemref="UUID"/>
        </Attribute>

        <Attribute itsName="sharedVersion">
            <type itemref="Long"/>
            <initialValue type="Long">-1</initialValue>
        </Attribute>

        <Attribute itsName="isPrivate">
            <type itemref="Boolean"/>
            <initialValue type="Boolean">False</initialValue>
        </Attribute>

        <Attribute itsName="sharer">
            <description value="The person who initially published this item" />
            <issues value="Eventually this will point to a Contact or equivalent" />
            <type itemref="contact:Contact" />
            <cardinality value="single" />
            <initialValue itemref="None" />
            <inverseAttribute itemref="contact:Contact/sharerOf" />
        </Attribute>

        <Attribute itsName="sharees">
            <description value="The people who were invited to share in this item" />
            <issues value="Eventually this will point to a Contact or equivalent" />
            <type itemref="contact:Contact" />
            <cardinality value="list" />
            <initialValue />
            <inverseAttribute itemref="contact:Contact/shareeOf" />
        </Attribute>

        <Attribute itsName="previousStamps">
            <description value="A list of mixin items that were used as stamps on this item previously." />
            <type itemref="Item"/>
            <cardinality value="list" />
        </Attribute>

  </Kind>

  <!-- Processing Item -->

  <Kind itsName="ProcessingItem">
    <displayName>Processing Item</displayName>
    <description>Mixin kind to give an item Processing Status.</description>
    <issues>This could be just an attribute of Note, but we need to wrap it with a mixinKind to give Note a unique mixinKind signature for FindStampedKind(), or else we can't distinguish it from other plain ContentItems.</issues>

      <Attribute itsName="processingStatus">

          <Enumeration itsName="processingStatusEnum">
              <displayName>Processing Status Enum</displayName>
              <values>processing</values>
              <values>deferred</values>
              <values>done</values>
              <values>junk</values>
              <values>trash</values>
          </Enumeration>

          <type itemref="cm:ProcessingItem/processingStatus/processingStatusEnum"/>
          <initialValue type="cm:ProcessingItem/processingStatus/processingStatusEnum">processing</initialValue>

      </Attribute>

  </Kind>

  <!-- Note -->

  <Kind itsName="Note">
    <displayName>Note</displayName>
    <superKinds itemref="cm:ContentItem"/>
    <superKinds itemref="cm:ProcessingItem"/>
    <classes key="python">osaf.contentmodel.Notes.Note</classes>

    <!-- redirections -->
    <Attribute itsName="who">
      <redirectTo>creator</redirectTo>
    </Attribute>

    <Attribute itsName="about">
      <redirectTo>displayName</redirectTo>
    </Attribute>

    <Attribute itsName="date">
      <redirectTo>createdOn</redirectTo>
    </Attribute>
  </Kind>


<!-- Stamped Kinds -->

  <Kind itsName="MailedTask">
    <displayName>Mailed Task</displayName>
    <description>A Task stamped as a Mail, or vica versa</description>
    <superKinds itemref="tasks:TaskMixin"/>
    <superKinds itemref="mail:MailMessage"/>
  </Kind>

  <Kind itsName="MailedEvent">
    <displayName>Mailed Event</displayName>
    <description>An Event stamped as a Mail, or vica versa</description>
    <superKinds itemref="calendar:CalendarEventMixin"/>
    <superKinds itemref="mail:MailMessage"/>
  </Kind>

  <Kind itsName="EventTask">
    <displayName>Event Task</displayName>
    <description>A Task stamped as an Event, or vica versa</description>
    <superKinds itemref="tasks:TaskMixin"/>
    <superKinds itemref="tasks:TaskEventExtraMixin"/>
    <superKinds itemref="calendar:CalendarEvent"/>
  </Kind>

  <Kind itsName="MailedEventTask">
    <displayName>Mailed Event Task</displayName>
    <description>A Task stamped as an Event stamped as Mail, in any sequence</description>
    <superKinds itemref="tasks:TaskMixin"/>
    <superKinds itemref="tasks:TaskEventExtraMixin"/>
    <superKinds itemref="calendar:CalendarEventMixin"/>
    <superKinds itemref="mail:MailMessage"/>
  </Kind>

<!-- Project -->


  <Kind itsName="Project">
    <classes key="python">osaf.contentmodel.ContentModel.Project</classes>
    <displayName>Project</displayName>
    <examples>my "Housewarming Party" project</examples>
    <examples>my department's "Move to new building" project</examples>
    <examples>my company's "Open Seattle Store" project</examples>
    <description>Users can create projects to help organize their work. Users can take content items (like tasks and mail messages) and assign them to different projects.</description>

      <Attribute itsName="parentProject">
        <displayName>Parent Project</displayName>
        <description>Projects can be organized into hierarchies. Each project can have one parent.</description>
        <cardinality>single</cardinality>
        <type itemref="cm:Project"/>
        <inverseAttribute itemref="cm:Project/subProjects"/>
      </Attribute>

      <Attribute itsName="subProjects">
        <displayName>Sub Projects</displayName>
        <description>Projects can be organized into hierarchies. Each project can have many sub-projects.</description>
        <cardinality>list</cardinality>
        <type itemref="cm:Project"/>
        <inverseAttribute itemref="cm:Project/parentProject"/>
      </Attribute>
  </Kind>

<!-- Group -->
  <Kind itsName="Group">
    <displayName>"Playlist"/"Item Collection"</displayName>
    <description>See http://wiki.osafoundation.org/twiki/bin/view/Jungle/CollectionProject</description>
    <issues>We still need to work out some issues about how "playlists"/"item collections" are modeled.</issues>
    <issues>We need to find a name for these things.</issues>
    <superKinds itemref="cm:ContentItem"/>
    <classes key="python">osaf.contentmodel.ContentModel.Group</classes>
  </Kind>


  <!-- ItemCollection -->

  <Kind itsName="ItemCollection">
    <classes key="python">osaf.contentmodel.ItemCollection.ItemCollection</classes>
    <superKinds itemref="cm:ContentItem"/>

    <displayName>Item Collection</displayName>

    <Attribute itsName="_rule">
      <type itemref="String"/>
      <initialValue type="String"></initialValue>
    </Attribute>

    <Attribute itsName="_inclusions">
      <type itemref="Item"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="cm:ContentItem/itemCollectionInclusions"/>
      <initialValue/>
    </Attribute>

    <Attribute itsName="_exclusions">
      <type itemref="Item"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="cm:ContentItem/itemCollectionExclusions"/>
      <initialValue/>
    </Attribute>

    <Attribute itsName="_filterKinds">
      <type itemref="String"/>
      <cardinality>list</cardinality>
      <initialValue/>
    </Attribute>

    <Attribute itsName="_results">
      <type itemref="Item"/>
      <cardinality>list</cardinality>
      <inverseAttribute itemref="cm:ContentItem/itemCollectionResults"/>
      <initialValue/>
    </Attribute>

    <Attribute itsName="queryStringStale">
      <type itemref="Boolean"/>
      <initialValue type="Boolean" value="True"/>
    </Attribute>

    <Attribute itsName="resultsStale">
      <type itemref="Boolean"/>
      <initialValue type="Boolean" value="True"/>
    </Attribute>

    <Attribute itsName="indexName">
      <type itemref="String"/>
      <initialValue type="String">__adhoc__</initialValue>
    </Attribute>


    <!-- redirections -->
    <Attribute itsName="who">
      <redirectTo>sharees</redirectTo>
    </Attribute>

    <Attribute itsName="whoFrom">
      <redirectTo>sharer</redirectTo>
    </Attribute>

    <Attribute itsName="about">
      <redirectTo>displayName</redirectTo>
    </Attribute>

    <!-- Default Cloud -->
    <Cloud itsName="DefaultCloud">
      <Endpoint itsName="_inclusions">
        <attribute value="_inclusions"/>
        <includePolicy value="byCloud"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/_inclusions"/>
      <Endpoint itsName="_exclusions">
        <attribute value="_exclusions"/>
        <includePolicy value="byCloud"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/_exclusions"/>
      <Endpoint itsName="_filterKinds">
        <attribute value="_filterKinds"/>
        <includePolicy value="byCloud"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/_filterKinds"/>
      <Endpoint itsName="_results">
        <attribute value="_results"/>
        <includePolicy value="byCloud"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/_results"/>
      <Endpoint itsName="contentsOwner">
        <attribute value="contentsOwner"/>
        <includePolicy value="byCloud"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/contentsOwner"/>
      <Endpoint itsName="sharer">
        <attribute value="sharer"/>
        <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/sharer"/>
      <Endpoint itsName="sharees">
        <attribute value="sharees"/>
        <includePolicy value="byValue"/>
      </Endpoint>
      <endpoints itemref="cm:ItemCollection/DefaultCloud/sharees"/>
    </Cloud>
    <clouds alias="default" itemref="cm:ItemCollection/DefaultCloud"/>

  </Kind>

</Parcel>

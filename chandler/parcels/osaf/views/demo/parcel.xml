<?xml version="1.0" encoding="iso-8859-1"?>

<!-- $Revision$ -->
<!-- $Date$ -->
<!-- Copyright (c) 2003-2004 Open Source Applications Foundation -->
<!-- License: http://osafoundation.org/Chandler_0.1_license_terms.htm -->

<core:Parcel describes="//parcels/osaf/views/demo"
             itsName="demo"
             xmlns:core="http://osafoundation.org/parcels/core"
             xmlns="http://osafoundation.org/parcels/osaf/framework/blocks"
             xmlns:doc="http://osafoundation.org/parcels/osaf/views/demo"
             xmlns:events="http://osafoundation.org/parcels/osaf/framework/blocks/Events"
             xmlns:main="http://osafoundation.org/parcels/osaf/views/main">

  <core:version>0.3</core:version>

  <!--
    Styles
  -->
  <CharacterStyle itsName="TitleStyle">
    <fontStyle>bold</fontStyle>
  </CharacterStyle>  

  <CharacterStyle itsName="TextStyle">
    <fontSize>10.0</fontSize>
  </CharacterStyle>

  <!--
    Events
  -->
  <ChoiceEvent itsName="ChooseIntroTab">
    <dispatchToBlock itemref="doc:Tabs"/>
    <methodName>onChoiceEvent</methodName>
    <choice>Intro</choice>
  </ChoiceEvent>  
  
  <ChoiceEvent itsName="ChooseButtonsTab">
    <dispatchToBlock itemref="doc:Tabs"/>
    <methodName>onChoiceEvent</methodName>
    <choice>Buttons</choice>
  </ChoiceEvent>

  <ChoiceEvent itsName="ChooseControlsTab">
    <dispatchToBlock itemref="doc:Tabs"/>
    <methodName>onChoiceEvent</methodName>
    <choice>Controls</choice>
  </ChoiceEvent>
  
  <ChoiceEvent itsName="ChooseHTMLTab">
    <dispatchToBlock itemref="doc:Tabs"/>
    <methodName>onChoiceEvent</methodName>
    <choice>HTML</choice>
  </ChoiceEvent>

  <BlockEvent itsName="ReloadText">
    <eventName>ReloadText</eventName>
    <dispatchToBlock itemref="doc:Tabs"/>
  </BlockEvent>

  <BlockEvent itsName="AddText">
    <eventName>ReloadText</eventName>
    <dispatchToBlock itemref="doc:Tabs"/>
  </BlockEvent>

  <BlockEvent itsName="CycleTabs">
    <eventName>CycleTabs</eventName>
    <methodName>onCycleTabsEvent</methodName>
    <dispatchToBlock itemref="doc:BlockDemoToolbarButton"/>
  </BlockEvent>

  <!--
    Menus
  -->

  <Menu itsName="DemoMenu">
    <blockName>DemoMenu</blockName>
    <description>A menu added by the Block Demo to the menu bar</description>
    <title>Block Demo</title>
    <location>MenuBar</location>
    <itemLocation>HelpMenu</itemLocation>
    <helpString></helpString>

    <childrenBlocks itemref="doc:IntroMenuItem"/>    
    <childrenBlocks itemref="doc:ButtonsMenuItem"/>
    <childrenBlocks itemref="doc:ControlsMenuItem"/>
    <childrenBlocks itemref="doc:HTMLMenuItem"/>
  </Menu>

  <!--
    Menu Items
  -->

  <MenuItem itsName="IntroMenuItem">
    <blockName>IntroMenuItem</blockName>
    <title>Intro Tab</title>
    <menuItemKind>Radio</menuItemKind>
    <event itemref="doc:ChooseIntroTab"/>
    <helpString></helpString>
  </MenuItem>

  <MenuItem itsName="ButtonsMenuItem">
    <blockName>ButtonsMenuItem</blockName>
    <title>Buttons Tab</title>
    <menuItemKind>Radio</menuItemKind>
    <event itemref="doc:ChooseButtonsTab"/>
    <helpString></helpString>
  </MenuItem>

  <MenuItem itsName="ControlsMenuItem">
    <blockName>ControlsMenuItem</blockName>
    <title>Controls Tab</title>
    <menuItemKind>Radio</menuItemKind>
    <event itemref="doc:ChooseControlsTab"/>
    <helpString></helpString>
  </MenuItem>

  <MenuItem itsName="HTMLMenuItem">
    <blockName>HTMLMenuItem</blockName>
    <title>HTML Tab</title>
    <menuItemKind>Radio</menuItemKind>
    <event itemref="doc:ChooseHTMLTab"/>
    <helpString></helpString>
  </MenuItem>

  <!-- 
    Menu items to demo and test Dynamic Containers 
    We replace the "Undo" item with our own Undo,
    delete the "Redo" item completely,
    insert a sub-menu "Paste Special",
    and insert a "Clear" menu item before "Delete".
  -->
  <MenuItem itsName="ReplaceUndoItem">
    <blockName>ReplaceUndoItem</blockName>
    <location>EditMenu</location>
    <itemLocation value="UndoItem"/>
    <operation value="Replace"/>
    <title>Can't Undo BlockDemo</title>
  </MenuItem>

  <MenuItem itsName="DeleteRedoItem">
    <blockName>DeleteRedoItem</blockName>
    <location>EditMenu</location>
    <itemLocation value="RedoItem"/>
    <operation value="Delete"/>
  </MenuItem>

  <Menu itsName="InsertPasteSpecialMenu">
    <blockName>InsertPasteSpecialMenu</blockName>
    <location>EditMenu</location>
    <itemLocation value="PasteItem"/>
    <title>Paste Special</title>
    <childrenBlocks itemref="doc:PasteSpecialItem2"/>    
    <childrenBlocks itemref="doc:PasteSpecialItem3"/>
  </Menu>

  <MenuItem itsName="PasteSpecialItem2">
    <blockName>PasteSpecialItem2</blockName>
    <title>Special flavor 2 for BlockDemo</title>
  </MenuItem>

  <MenuItem itsName="PasteSpecialItem3">
    <blockName>PasteSpecialItem3</blockName>
    <title>Special flavor 3 for BlockDemo</title>
  </MenuItem>

  <MenuItem itsName="InsertClearItem">
    <blockName>InsertClearItem</blockName>
    <location>EditMenu</location>
    <itemLocation value="DeleteItem"/>
    <title>Clear</title>
  </MenuItem>

  
  <!-- Toolbar Item, to add to the global toolbar -->
  <ToolbarItem itsName="BlockDemoToolbarButton"
               itemClass="osaf.views.demo.Demo.DemoToolbarItem">
    <blockName>BlockDemoToolbarButton</blockName>
    <location>NavigationBar</location>
    <title>Block Demo</title>
    <label>Cycle Tabs</label>
    <bitmap>application/images/forwardto.png</bitmap>
    <toolbarItemKind>Button</toolbarItemKind>
    <helpString>Go to the next tab in block demo</helpString>
    <event itemref="doc:CycleTabs"/>
    <!-- ToolbarItems must use subscribeAlways because they are not true wx widgets -->
    <!--  but we'll only get the event when pressed, which will only happen when visible. -->
    <subscribeWhenVisibleEvents itemref="doc:CycleTabs"/>
  </ToolbarItem>
 
  <!--
    Layout blocks
  -->
  <StaticText itsName="IntroTitle">
    <!-- Attributes -->
    <textAlignmentEnum>Center</textAlignmentEnum>
    <characterStyle itemref="doc:TitleStyle"/>
    <title>Demo View</title>

    <minimumSize>400,50</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>
    <stretchFactor>0.0</stretchFactor>
  </StaticText>  

  <StaticText itsName="IntroText">
    <!-- Attributes -->
    <characterStyle itemref="doc:TextStyle"/>
    <title>The demo view demonstrates the new CPIA functionality and some of the available blocks.

It is used as an example for developers new to Chandler to see the kinds of blocks that are available and as a test framework for blocks.
    </title>
    <size>600,200</size>
    <minimumSize>400,200</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>

    <stretchFactor>0.0</stretchFactor>
  </StaticText>  

  <StaticText itsName="IntroInstructions">
    <!-- Attributes -->
    <characterStyle itemref="doc:TextStyle"/>
    <title>

Click through the tabs to view the kinds of blocks that Chandler supports.
    </title>
    <size>600,200</size>
    <minimumSize>400,50</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>
    <stretchFactor>0.0</stretchFactor>
  </StaticText>  

  <BoxContainer itsName="IntroTab">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:IntroTitle"/>
    <childrenBlocks itemref="doc:IntroText"/>
    <childrenBlocks itemref="doc:IntroInstructions"/>

    <!-- Attributes -->
    <orientationEnum>Vertical</orientationEnum>
    <displayName>Intro</displayName>
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>

  <StaticText itsName="ButtonHeader">
    <!-- Attributes -->
    <textAlignmentEnum>Center</textAlignmentEnum>
    <characterStyle itemref="doc:TextStyle"/>
    <title>Click on the buttons below to modify the text field</title>

    <size>600,200</size>
    <minimumSize>400,100</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>
    <stretchFactor>0.0</stretchFactor>
  </StaticText>  

  <Button itsName="TextButton">
    <!-- Attributes -->
    <title>Add Text</title>
    <buttonKind>Text</buttonKind>

    <size>80,30</size>
    <minimumSize>80,30</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
    <event itemref="doc:AddText"/>
    <alignmentEnum>alignCenter</alignmentEnum>
    <stretchFactor>0.0</stretchFactor>
  </Button>
  
  <Button itsName="ImageButton">
    <!-- Attributes -->
    <buttonKind>Image</buttonKind>
    <icon>application/images/reply.png</icon>

    <size>60,40</size>
    <minimumSize>60,40</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
    <event itemref="doc:ReloadText"/>
    <alignmentEnum>alignCenter</alignmentEnum>
    <stretchFactor>0.0</stretchFactor>
  </Button>

  <Button itsName="ToggleButton">
    <!-- Attributes -->
    <title>Toggle</title>
    <buttonKind>Toggle</buttonKind>

    <size>60,40</size>
    <minimumSize>60,40</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
    <alignmentEnum>alignCenter</alignmentEnum>
    <stretchFactor>0.0</stretchFactor>
  </Button>

  <BoxContainer itsName="ButtonsSizer">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:ImageButton"/>
    <childrenBlocks itemref="doc:ToggleButton"/>
    <childrenBlocks itemref="doc:TextButton"/>

    <!-- Attributes -->
    <size>200,40</size>
    <minimumSize>200,40</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>
  
  <EditText itsName="ButtonText">
    <!-- Attributes -->
    <lineStyleEnum>MultiLine</lineStyleEnum>
    <textStyleEnum>PlainText</textStyleEnum>
    <readOnly>False</readOnly>
    <characterStyle itemref="doc:TextStyle"/>

    <size>100,100</size>
    <minimumSize>100,100</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>
  </EditText>

  <BoxContainer itsName="ButtonsTab">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:ButtonHeader"/>
    <childrenBlocks itemref="doc:ButtonsSizer"/>
    <childrenBlocks itemref="doc:ButtonText"/>

    <!-- Attributes -->
    <orientationEnum>Vertical</orientationEnum>
    <displayName>Buttons</displayName>
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>
  
  <RadioBox itsName="RadioExample">
    <!-- Attributes -->
    <title>Radio Box Example</title>
    <choices>One</choices>
    <choices>Two</choices>
    <choices>Three</choices>
    <choices>Four</choices>
    <choices>Five</choices>
    <radioAlignEnum>Down</radioAlignEnum>
    <itemsPerLine>3</itemsPerLine>

    <size>200,200</size>
    <minimumSize>200,10</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
    <stretchFactor>0.0</stretchFactor>
  </RadioBox>
  
  <ComboBox itsName="ComboExample">
    <!-- Attributes -->
    <selection>First</selection>    
    <choices>First</choices>
    <choices>Second</choices>
    <choices>Third</choices>

    <size>200,200</size>
    <minimumSize>200,10</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
    <stretchFactor>0.0</stretchFactor>
  </ComboBox>

  <BoxContainer itsName="RadioSizer">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:RadioExample"/>

    <!-- Attributes -->
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>
  
  <BoxContainer itsName="ComboSizer">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:ComboExample"/>

    <!-- Attributes -->
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>

  <BoxContainer itsName="ControlsTab">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:RadioSizer"/>
    <childrenBlocks itemref="doc:ComboSizer"/>

    <!-- Attributes -->
    <orientationEnum>Vertical</orientationEnum>
    <displayName>Controls</displayName>
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>

  <HTML itsName="HTMLExample">
    <!-- Attributes -->
    <url>parcels/osaf/views/demo/example.html</url>

    <size>200,200</size>
    <minimumSize>200,200</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </HTML>

  <BoxContainer itsName="HTMLTab">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:HTMLExample"/>
    <!-- Attributes -->
    <orientationEnum>Vertical</orientationEnum>
    <displayName>HTML</displayName>
    <size>200,100</size>
    <minimumSize>200,100</minimumSize>
    <border>2.0, 2.0, 2.0, 2.0</border>
  </BoxContainer>

  <TabbedContainer itsName="Tabs"
                   itemClass="osaf.views.demo.Demo.DemoTabs">
    <!-- Layout children -->
    <childrenBlocks itemref="doc:IntroTab"/>
    <childrenBlocks itemref="doc:ButtonsTab"/>
    <childrenBlocks itemref="doc:ControlsTab"/>
    <childrenBlocks itemref="doc:HTMLTab"/>

    <!-- Attributes -->
    <tabPosEnum>Top</tabPosEnum>
    
    <size>600,200</size>
    <minimumSize>400,100</minimumSize>
    <border>3.0, 3.0, 3.0, 3.0</border>
  </TabbedContainer>
  
  <BoxContainer itsName="BlockDemoView">
    <displayName>Block Demo</displayName>

    <!-- Menus -->
    <childrenBlocks itemref="doc:DemoMenu"/>

    <!-- Menu items to test Dynamic Containers -->
    <childrenBlocks itemref="doc:ReplaceUndoItem"/>
    <childrenBlocks itemref="doc:DeleteRedoItem"/>
    <childrenBlocks itemref="doc:InsertPasteSpecialMenu"/>
    <childrenBlocks itemref="doc:InsertClearItem"/>

    <!-- Toolbar button to test Dynamic Containers -->
    <childrenBlocks itemref="doc:BlockDemoToolbarButton"/>

    <!-- Layout children -->
    <childrenBlocks itemref="doc:Tabs"/>

    <!-- Block Events -->
    <subscribeWhenVisibleEvents itemref="doc:ChooseButtonsTab"/>
    <subscribeWhenVisibleEvents itemref="doc:ChooseControlsTab"/>
    <subscribeWhenVisibleEvents itemref="doc:ChooseHTMLTab"/>
    <subscribeWhenVisibleEvents itemref="doc:ChooseIntroTab"/>
    <subscribeWhenVisibleEvents itemref="doc:ReloadText"/>
    <subscribeWhenVisibleEvents itemref="doc:AddText"/>

    <!-- Attributes -->
    <orientationEnum>Vertical</orientationEnum>

    <eventBoundary>True</eventBoundary>
    <size>600,200</size>
    <minimumSize>400,100</minimumSize>
    <border>1.0, 1.0, 1.0, 1.0</border>
  </BoxContainer>
    
</core:Parcel>
